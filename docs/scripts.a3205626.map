{"version":3,"sources":["scripts/utils/index.ts","scripts/game/DrawableClass.ts","scripts/game/Asteroid.ts","scripts/game/Spaceship.ts","scripts/game/Bullet.ts","scripts/utils/fakeJquery.ts","scripts/game/Game.ts","scripts/events/documentEventListeners.ts","scripts/events/index.ts","scripts/index.ts"],"names":[],"mappings":";AAyHC,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAlHD,SAAS,EAAc,EAAc,GAChC,IAAA,GAAS,EAEN,OAAA,WACF,IACH,GAAS,EAET,EAAG,MAAM,KAAM,WACf,WAAW,WACV,GAAS,GACP,KAKN,SAAS,EAAc,EAA2B,GAC7C,IAAA,EAEG,OAAA,WACF,GACH,OAAO,aAAa,GAGrB,EAAQ,OAAO,WAAW,WAEzB,EAAG,MAAM,KAAM,YACb,IAOL,SAAS,EAAU,GAEd,IAAA,EAGA,GAAe,WAAf,EAAO,IAA2B,MAAP,EAAa,OAAO,EAG/C,GAAA,aAAe,KAGX,OAFP,EAAO,IAAI,MACN,QAAQ,EAAI,WACV,EAIJ,GAAA,aAAe,MAKX,OAJP,EAAO,GACP,EAAI,QAAQ,SAAC,EAAM,GAClB,EAAK,GAAS,EAAU,KAElB,EAIJ,GAAA,aAAe,OAAQ,CAErB,IAAA,IAAM,KADX,EAAO,GACY,EACd,EAAI,eAAe,KACtB,EAAK,GAAQ,EAAU,EAAI,KAGtB,OAAA,GAIT,SAAS,IAAO,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAGV,IAFC,IAAA,EAAmB,GAEhB,EAAI,EAAG,EAAI,UAAU,OAAQ,GAAK,EAAG,CACvC,IAAA,EAAM,UAAU,GAClB,KAAE,aAAe,QAAS,MACzB,IAAA,IAAM,KAAO,EACb,EAAI,eAAe,KACtB,EAAY,GAAO,EAAU,EAAI,KAK7B,OAAA,EAIR,SAAS,EAAM,EAAe,QAAA,IAAA,IAAA,EAAA,GACvB,IAAA,EAAe,KAAK,IAAI,GAAI,GAC3B,OAAA,KAAK,MAAM,EAAQ,GAAgB,EAG3C,SAAS,EAAa,GACd,YADc,IAAA,IAAA,EAAA,IACd,KAAK,SAAW,EAGxB,SAAS,EACR,EACA,EACA,EACA,QADA,IAAA,IAAA,GAAA,QACA,IAAA,IAAA,EAAA,GAEI,IAAA,EAAe,EAAM,KAAK,UAAY,EAAM,GAAO,EAAK,GAIrD,OAHH,IACH,EAAe,KAAkB,EAAI,EAAe,GAE9C,EAUP,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IANA,QAAA,cAAA,EACA,QAAA,cAAA,EACA,QAAA,UAAA,EACA,QAAA,OAAA,EACA,QAAA,MAAA,EACA,QAAA,aAAA,EACA,QAAA,aAAA;;ACKD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA5HA,IAAA,EAAA,WAiBC,SAAA,EAAY,GAhBZ,KAAA,WAA2B,GAoBrB,EAAc,aAClB,EAAc,WAAa,EAAQ,WAChC,EAAQ,WACF,OAAQ,KAAK,YAGlB,EAAc,MAClB,EAAc,IAAM,EAAQ,IAAM,EAAQ,IAAY,OAAQ,KAAK,KAG/D,KAAA,SAAW,KAAK,gBAAgB,GAChC,KAAA,OAAS,KAAK,cAAc,GAC5B,KAAA,MAAQ,EAAQ,MAChB,KAAA,YACJ,EAAQ,aAAe,EAAc,gBAAgB,YACjD,KAAA,OACJ,OAAO,UAAU,eAAe,KAAK,EAAS,gBAC3B,IAAnB,EAAQ,OACL,EAAQ,OACR,EAAc,gBAAgB,OAG7B,KAAA,SAAW,KAAK,YAChB,KAAA,SAAW,EAAQ,WAAY,EA8EtC,OAvDW,EAAA,UAAA,UAAV,WACO,IAAA,EAAS,EAAc,WAAW,MAClC,EAAS,EAAc,WAAW,OAEjC,OAAA,KAAK,WAAW,MAAM,SAAA,GACpB,IAAA,EAAA,EAAA,EAAG,EAAA,EAAA,EACJ,OAAA,GAAK,GAAK,EAAI,GAAU,GAAK,GAAK,GAAK,KAMtC,EAAA,UAAA,SAAV,WACO,IAAA,EAAS,EAAc,WAAW,MAClC,EAAS,EAAc,WAAW,OAEjC,OAAA,KAAK,WAAW,MAAM,SAAA,GACpB,IAAA,EAAA,EAAA,EAAG,EAAA,EAAA,EACJ,OAAA,EAAI,GAAK,EAAI,GAAU,EAAI,GAAK,EAAI,KAGnC,EAAA,UAAA,UAAV,WACK,IAAA,EACA,EACA,EACA,EAmBG,OAjBF,KAAA,WAAW,QAAQ,SAAC,EAAI,GACpB,IAAA,EAAA,EAAA,EAAG,EAAA,EAAA,EAED,IAAN,GACH,EAAY,EAAa,EACzB,EAAa,EAAa,IAE1B,EAAY,KAAK,IAAI,EAAW,GAChC,EAAa,KAAK,IAAI,EAAY,GAClC,EAAa,KAAK,IAAI,EAAY,GAClC,EAAa,KAAK,IAAI,EAAY,MAO7B,CAEN,UAAS,EAET,WAAU,EAEV,WAAU,EAEV,WAAU,IA3GL,EAAA,gBAAuB,CAC7B,OAAQ,EACR,YAAa,SA4Gf,EA1HA,GAAsB,QAAA,cAAA,EA4HtB,QAAA,QAAe;;ACuQf,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArYA,IAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,oBAEA,EAAA,SAAA,GAoHC,SAAA,EAAY,GAAZ,IAAA,EAAA,KACO,EAAU,EAAA,OAAO,EAAS,gBAAiB,GA6QnD,OA5QE,EAAA,EAAA,KAAA,KAAM,IAAQ,MAET,MAAQ,EAAQ,OAAS,EAAS,gBAAgB,MACvD,EAAK,OACJ,OAAO,UAAU,eAAe,KAAK,EAAS,gBAC3B,IAAnB,EAAQ,OACL,EAAQ,OACR,EAAS,gBAAgB,OAC7B,EAAK,MAAQ,EAAQ,MACrB,EAAK,WAAa,EAAQ,WAmQ5B,EAbA,OArX8B,EAAA,EAAA,GAqCtB,EAAA,MAAP,SAAa,GACN,IAAA,EAAA,EAAA,UAAA,GACL,EAAA,EAAA,SAUM,OAAA,IAAI,EAAS,CACnB,OAVA,EAAA,OAWA,MAVA,EAAA,MAWA,OAVA,EAAA,OAWA,YAVA,EAAA,YAWA,MAVA,EAAA,MAWA,OAVA,EAAA,OAWA,MAVA,EAAA,MAWA,SAAQ,KAIH,EAAA,UAAP,SACC,EACA,EACA,GAEI,QAFJ,IAAA,IAAA,EAAA,GAEI,EAAS,OAAS,EAAU,MAAO,GAmBlC,IAjBC,IAAA,EAAe,GACf,EAAQ,EAAS,MAAQ,EACzB,EAAQ,EAAA,MAAM,EAAS,MAAQ,GAC/B,EAAmC,EAAtB,EAAS,WAE3B,EAAA,EAAA,OACA,EAAA,EAAA,YACA,EAAA,EAAA,MACA,EAAA,EAAA,OACA,EAAA,EAAA,SACC,EAAA,EAAA,WACA,EAAA,EAAA,WACA,EAAA,EAAA,SAKO,EAAI,EAAG,GAAK,EAAU,GAAK,EAAG,CAChC,IAAA,EAAe,GAAM,GAAK,EAAI,GAa9B,EAAgB,IAAI,EAAS,CAClC,OAAM,EACN,MAAK,EACL,SAfgB,CAChB,WAAY,EAAA,eACT,EAAA,MAAM,EAAQ,IACiB,EAA/B,EAAA,MAAM,EAAQ,GACjB,WAAY,EAAA,eACT,EAAA,MAAM,EAAQ,IACiB,EAA/B,EAAA,MAAM,EAAQ,GACjB,SAAU,EAAA,eACP,EAAA,MAAM,EAAe,IACiB,EAAtC,EAAA,MAAM,EAAe,IAOxB,MAAK,EACL,MAAK,EACL,WAAU,EACV,YAAW,EACX,OAAM,IAGP,EAAa,KAAK,GAGZ,OAAA,GAiBD,EAAA,UAAA,cAAP,SAAqB,GAChB,IAAC,KAAK,WAAW,OAAQ,OAAO,EAI9B,IAAA,EAAA,KAAA,YAAE,EAAA,EAAA,UAAW,EAAA,EAAA,WAAY,EAAA,EAAA,WAAY,EAAA,EAAA,WAG1C,GAAA,EAAU,EAAI,GACd,EAAU,EAAI,GACd,EAAU,EAAI,GACd,EAAU,EAAI,EAEP,OAAA,EAGJ,IAAA,GAAW,EACT,EAAc,KAAK,WAAW,IAAI,SAAC,EAAK,EAAO,GAC9C,IAAA,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EACL,EAAQ,EAAI,EAAS,OAAS,EAAS,EAAQ,GAAG,EAAI,EAAS,GAAG,EAG7D,GAAK,GADV,EAAQ,EAAI,EAAS,OAAS,EAAS,EAAQ,GAAG,EAAI,EAAS,GAAG,KAC5C,EAAK,GACtB,EAAI,EAAK,EAAI,EAGf,OAAA,IAAM,EAAA,EACL,EAAU,IAAM,GACnB,GAAW,GACJ,GAED,EAAU,EAAI,EAElB,EAAU,IAAM,EAAI,EAAU,EAAI,GACrC,GAAW,GACJ,GAED,EAAU,EAAI,EAAI,EAAU,EAAI,IAGpC,GAAA,EACI,OAAA,EAIJ,IAAA,EAAgB,EACd,EAAc,KAAK,KAAK,EAAY,OAAS,GAO5C,OANP,EAAY,QAAQ,SAAA,GACf,IACH,GAAiB,KAIZ,IAAkB,GAGnB,EAAA,UAAA,gBAAP,SAAuB,GAElB,GAAA,EAAQ,SACJ,OAAA,EAAQ,SAGV,IAAA,EAAA,EAAA,gBAAA,gBAAE,EAAA,EAAA,EAAG,EAAA,EAAA,EAAG,EAAA,EAAA,SAEP,MAAA,CACN,WAAY,EAAA,aAAa,EAAE,IAAK,EAAE,IAAK,EAAE,aACzC,WAAY,EAAA,aAAa,EAAE,IAAK,EAAE,IAAK,EAAE,aACzC,SAAU,EAAA,aAAa,EAAE,IAAK,EAAE,IAAK,EAAE,eAIlC,EAAA,UAAA,cAAP,SAAqB,GAChB,GAAA,EAAQ,OACJ,OAAA,EAAQ,OAQZ,IAAA,EAJC,KAAK,WACJ,KAAA,SAAW,KAAK,gBAAgB,IAKrC,EADG,KAAK,SAAS,WAAa,EACnB,KAAK,SAAS,WAAa,EAAI,EAAI,EAEnC,KAAK,SAAS,WAAa,EAAI,EAAI,EAGzC,IAEF,EAFE,EAAQ,EAAA,QAAc,WAAW,MACjC,EAAS,EAAA,QAAc,WAAW,OAGhC,OAAA,GACF,KAAA,EACJ,EAAS,CACR,EAAG,EAAQ,GACX,GAAI,IAEL,MACI,KAAA,EACJ,EAAS,CACR,GAAI,GACJ,GAAI,IAEL,MACI,KAAA,EACJ,EAAS,CACR,GAAI,GACJ,EAAG,EAAS,IAEb,MACI,KAAA,EACJ,EAAS,CACR,EAAG,EAAQ,GACX,EAAG,EAAS,IAEb,MACD,QACO,MAAA,IAAI,MACT,8DAKI,OAAA,GAGD,EAAA,UAAA,WAAP,SAAkB,GACX,IAAA,EAAU,EAAQ,KAAK,SAAS,WAChC,EAAU,EAAQ,KAAK,SAAS,WAElC,IAAC,KAAK,OACH,MAAA,IAAI,MAAM,uCAGZ,KAAA,OAAO,EAAI,EAAA,MAAkC,KAA3B,KAAK,OAAO,EAAI,IAAkB,IACpD,KAAA,OAAO,EAAI,EAAA,MAAkC,KAA3B,KAAK,OAAO,EAAI,IAAkB,IAEpD,KAAA,QAAU,KAAK,SAAS,SAExB,KAAA,WAAa,GAEb,IADC,IAAA,EAAY,IAAM,KAAK,MACpB,EAAI,EAAG,EAAI,KAAK,MAAO,GAAK,EAAG,CACjC,IAAA,EAAQ,EAAY,EAAI,KAAK,OAC7B,EACL,KAAK,OAAO,EAAI,KAAK,IAAK,KAAK,GAAK,EAAS,KAAO,KAAK,MACpD,EACL,KAAK,OAAO,EAAI,KAAK,IAAK,KAAK,GAAK,EAAS,KAAO,KAAK,MACrD,KAAA,WAAW,KAAK,CACpB,EAAG,EAAA,MAAa,IAAP,GAAc,IACvB,EAAG,EAAA,MAAa,IAAP,GAAc,MAUlB,OANF,KAAK,UAAY,KAAK,YACrB,KAAA,UAAW,EACN,KAAK,aACV,KAAA,UAAW,EACX,KAAA,WAEC,KAAK,YAGN,EAAA,UAAA,WAAP,WACK,IAAC,KAAK,SACF,OAAA,EAGF,IAAA,EAAM,EAAA,QAAc,IAiBnB,OAfP,EAAI,OACJ,EAAI,YAAc,KAAK,YACvB,EAAI,YACC,KAAA,WAAW,QAAQ,SAAC,EAAI,GAElB,IAAN,EACH,EAAI,OAAO,EAAG,EAAG,EAAG,GAEpB,EAAI,OAAO,EAAG,EAAG,EAAG,KAGtB,EAAI,YACJ,EAAI,SACJ,EAAI,WAEG,GAGA,EAAA,UAAA,QAAR,WACO,IAAA,EAAS,EAAA,QAAc,WAAW,MAClC,EAAS,EAAA,QAAc,WAAW,OACpC,EAAY,EACZ,EAAY,EAGV,EAAA,KAAA,YAAE,EAAA,EAAA,UAAW,EAAA,EAAA,WAAY,EAAA,EAAA,WAAY,EAAA,EAAA,WAkCvC,GA9BA,KAAK,SAAS,WAAa,EAE1B,EAAY,IAEf,GAAa,GAAK,EAAa,KAAK,SAKjC,EAAa,IAEhB,EAAY,KAAK,IAAI,GAAa,EAAS,KAAK,QAM9C,KAAK,SAAS,WAAa,EAE1B,EAAa,IAChB,GAAa,GAAK,EAAa,KAAK,SAKjC,EAAa,IAChB,EAAY,KAAK,IAAI,GAAc,EAAS,KAAK,SAI9C,KAAK,OACH,MAAA,IAAI,MAAM,sCAGZ,KAAA,OAAO,EAAI,KAAK,OAAO,EAAI,EAC3B,KAAA,OAAO,EAAI,KAAK,OAAO,EAAI,EAE3B,KAAA,WAAW,QAAQ,SAAA,GACvB,EAAG,GAAK,EACR,EAAG,GAAK,KA5WH,EAAA,gBAAkB,CAExB,MAAO,EACP,WAAY,EACZ,MAAO,GACP,MAAO,GACP,OAAQ,EAER,gBAAiB,CAKhB,EAAG,CACF,IAAK,KACL,IAAK,IACL,aAAa,GAEd,EAAG,CACF,IAAK,IACL,IAAK,IACL,aAAa,GAEd,SAAU,CACT,IAAK,IACL,IAAK,GACL,aAAa,KAqVjB,EArXA,CAA8B,EAAA,SAuX9B,SAAgB,EACf,EACA,GAEO,YAFP,IAAA,IAAA,EAAA,GAEO,IAAI,QAAQ,SAAA,GAClB,WAAW,WACV,EAAQ,IAAI,EAAS,KACnB,KAIL,SAAgB,IACX,IAAA,EAAgB,KAAK,MAIlB,OAAA,SACN,EACA,EACA,GAEO,YAJP,IAAA,IAAA,EAAA,SACA,IAAA,IAAA,EAAA,UACA,IAAA,IAAA,GAAA,GAEO,IAAI,QAAQ,SAAA,GAEd,GAAA,EAUH,OATiB,IAAb,EACH,EAAQ,IAAI,EAAS,IAErB,WAAW,WACV,EAAQ,IAAI,EAAS,KACnB,QAGJ,EAAgB,KAAK,OAMlB,GAAA,KAAK,MAAQ,EAAgB,EAChC,EAAQ,IAAI,EAAS,IACrB,EAAgB,KAAK,WAEf,IAAA,EAAe,SAAS,GAAG,EAAW,EAAK,IAE3C,EAAc,YAAY,WAC3B,KAAK,MAAQ,EAAgB,IAChC,cAAc,GACd,EAAQ,IAAI,EAAS,IACrB,EAAgB,KAAK,QAEpB,MAzaM,QAAA,SAAA,EAuXb,QAAA,aAAA,EAWA,QAAA,oBAAA;;ACxKA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA7NA,IAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,oBAEA,EAAA,SAAA,GA2BC,SAAA,EAAY,QAAA,IAAA,IAAA,EAAA,IAAZ,IAAA,EACC,EAAA,KAAA,KAAM,EAAA,OAAO,EAAU,gBAAiB,KAAY,KAzBrD,EAAA,aAAuB,EACvB,EAAA,cAAwB,EACxB,EAAA,aAAuB,EACvB,EAAA,UAAoB,EA0Bb,IAAA,EAAe,EAAA,OAAO,EAAU,gBAAiB,GA0LzD,OAzLE,EAAK,SAAW,EAAa,SAC7B,EAAK,UAAY,EAAa,UAC9B,EAAK,cAAgB,EAAa,cAClC,EAAK,aAAe,EAAa,aACjC,EAAK,aAAe,EAAa,aAGjC,EAAK,cAkLP,EAFA,OAxN+B,EAAA,EAAA,GA2CvB,EAAA,UAAA,YAAP,WACM,KAAA,aAAc,GAEb,EAAA,UAAA,WAAP,WACM,KAAA,aAAc,GAKpB,EAAA,UAAA,cAAA,SAAc,GACT,OAAA,EAAQ,OACJ,EAAQ,OAIT,CAAE,EAFC,KAAK,MAAM,EAAA,QAAc,WAAW,MAAQ,GAE1C,EADF,KAAK,MAAM,EAAA,QAAc,WAAW,OAAS,KAIxD,EAAA,UAAA,gBAAA,SAAgB,GACR,MAAA,CAAE,WAAY,EAAG,WAAY,EAAG,SAAU,IAa1C,EAAA,UAAA,qBAAR,WACO,IAAA,EAAI,KAAK,MACV,KAAA,WAAa,GACb,IAAA,IAAI,EAAQ,EAAG,EAAQ,IAAK,GAAS,IAAK,CACxC,IAAA,EACK,IAAV,EAAc,EAAI,EAAI,EAAU,gBAAgB,UAC3C,GAAc,EAAQ,KAAK,QAAU,KAAK,GAAM,IAChD,EAAI,KAAK,OAAO,EAAI,KAAK,IAAI,GAAa,EAC1C,EAAI,KAAK,OAAO,EAAI,KAAK,IAAI,GAAa,EAC3C,KAAA,WAAW,KAAK,CAAE,EAAC,EAAE,EAAC,MAItB,EAAA,UAAA,WAAP,SAAkB,GACb,OAAC,KAAK,UAGL,KAAA,SAAW,KAAK,aAAa,GAC7B,KAAA,OAAO,GAAK,KAAK,SAAS,WAC1B,KAAA,OAAO,GAAK,KAAK,SAAS,WAE1B,KAAA,wBAEA,KAAK,UAAY,KAAK,YACrB,KAAA,UAAW,EACN,KAAK,aACV,KAAA,UAAW,EACX,KAAA,WAGC,KAAK,YAhBe,IAmBrB,EAAA,UAAA,WAAP,WACK,IAAC,KAAK,SACF,OAAA,EAGF,IAAA,EAAM,EAAA,QAAc,IAsBnB,OAnBP,EAAI,yBAA2B,cAC/B,EAAI,OACJ,EAAI,YAAc,KAAK,YAEvB,EAAI,YACC,KAAA,WAAW,QAAQ,SAAC,EAAI,GAElB,IAAN,EACH,EAAI,OAAO,EAAG,EAAG,EAAG,GAEpB,EAAI,OAAO,EAAG,EAAG,EAAG,KAGtB,EAAI,YACJ,EAAI,SACJ,EAAI,WAIG,GAGA,EAAA,UAAA,QAAR,WACO,IAAA,EAAS,EAAA,QAAc,WAAW,MAClC,EAAS,EAAA,QAAc,WAAW,OACpC,EAAY,EACZ,EAAY,EAGV,EAAA,KAAA,YAAE,EAAA,EAAA,UAAW,EAAA,EAAA,WAAY,EAAA,EAAA,WAAY,EAAA,EAAA,WAGvC,EAAY,EACf,GAAa,EAAI,EACP,EAAa,IACvB,EAAY,KAAK,IAAI,GAAa,GAI/B,EAAa,EAChB,GAAa,EAAI,EACP,EAAa,IACvB,EAAY,KAAK,IAAI,GAAc,GAG/B,KAAA,OAAO,GAAK,EACZ,KAAA,OAAO,GAAK,EAEZ,KAAA,sBAGE,EAAA,UAAA,aAAR,SAAqB,GAChB,IAAA,EAAA,KAAA,SAAE,EAAA,EAAA,UAAW,EAAA,EAAA,WAAY,EAAA,EAAA,WAAY,EAAA,EAAA,SAyClC,OAxCP,EAAY,GAAa,EAEpB,KAAK,YASL,EAAY,KAAK,UACpB,EAAY,KAAK,WAEjB,GAAa,KAAK,aAAe,EACjC,EAAY,KAAK,IAAI,EAAW,KAAK,WAVrC,EADG,EAAY,EACH,EAAY,EAAW,KAAK,aAE5B,EAeb,EAFG,KAAK,cAAgB,KAAK,cAEjB,EAAI,EAAW,KAAK,eACrB,KAAK,aAAe,KAAK,aAEzB,EAAW,KAAK,cAEhB,EAEP,KAAA,QAAU,EAGX,GAAa,EAAY,GAC5B,EAAa,EAAY,KAAK,IAAK,KAAK,GAAK,KAAK,OAAU,KAC5D,EAAa,EAAY,KAAK,IAAK,KAAK,GAAK,KAAK,OAAU,OAE5D,EAAa,EACb,EAAa,GAGP,CACN,UAAS,EACT,WAAU,EACV,WAAU,EACV,SAAQ,IA7MH,EAAA,gBAAkB,CAExB,MAAO,GAGP,SAAU,EACV,UAAW,EACX,cAAe,EACf,aAAc,EACd,aAAc,GACd,UAAW,IAsMb,EAxNA,CAA+B,EAAA,SA0N/B,SAAgB,IACR,OAAA,SAAC,GACA,YADA,IAAA,IAAA,EAAA,KACA,IAAI,QAAQ,SAAA,GAClB,WAAW,WAEV,EAAQ,IAAI,IACV,MAhOO,QAAA,UAAA,EA0Nb,QAAA,qBAAA;;AC1Na,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAHb,IAAA,EAAA,EAAA,QAAA,oBACA,EAAA,QAAA,YAEA,EAAA,SAAA,GAMC,SAAA,EAAY,GACX,OAAA,EAAA,KAAA,KAAM,EAAA,OAAO,EAAO,gBAAiB,KAAY,KAkEnD,OAzE4B,EAAA,EAAA,GAWpB,EAAA,UAAA,WAAP,SAAkB,GAWV,OAVF,KAAA,OAAO,GAAK,KAAK,SAAS,WAC1B,KAAA,OAAO,GAAK,KAAK,SAAS,WAG1B,KAAA,WAAa,CAAC,KAAK,QAEpB,KAAK,aACH,KAAA,UAAW,GAGV,KAAK,YAGN,EAAA,UAAA,WAAP,WACK,IAAC,KAAK,SACF,OAAA,EAEF,IAAA,EAAM,EAAA,QAAc,IASnB,OAPP,EAAI,OACJ,EAAI,YAAc,KAAK,YACvB,EAAI,YACJ,EAAI,IAAI,KAAK,OAAO,EAAG,KAAK,OAAO,EAAG,EAAG,EAAG,EAAI,KAAK,IACrD,EAAI,SACJ,EAAI,WAEG,GAGD,EAAA,UAAA,cAAP,SAAqB,GAChB,IAAC,EAAQ,OACN,MAAA,IAAI,MACT,gEAGK,OAAA,EAAQ,QAOT,EAAA,UAAA,gBAAP,SAAuB,GAClB,IAAC,EAAQ,SACN,MAAA,IAAI,MACT,+EAII,IAAA,EAAmB,EAAA,UAAU,EAAQ,UACrC,EAAa,EAAiB,UACnC,EAAO,gBAAgB,YAElB,EAAa,EAAY,KAAK,IAAK,KAAK,GAAK,EAAQ,OAAU,KAC/D,EAAa,EAAY,KAAK,IAAK,KAAK,GAAK,EAAQ,OAAU,KAK9D,OAHP,EAAiB,WAAa,EAC9B,EAAiB,WAAa,EAEvB,GAtED,EAAA,gBAAkB,CACxB,YAAa,GACb,MAAO,GAsET,EAzEA,CAA4B,EAAA,SAAf,QAAA,OAAA;;ACyCb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA5CA,IAAM,EAAa,CAElB,SAAQ,SAAC,EAAmB,GACpB,OAAA,IAAI,OAAO,kBAAkB,KAAK,IAAI,EAAK,UAAS,MAG5D,SAAQ,SAAC,EAAmB,GACtB,KAAK,SAAS,EAAM,KACxB,EAAK,WAAa,IAAI,IAYxB,YAAW,SAAC,EAAmB,GAC1B,IAAA,EAAW,IAAI,EAAK,UAAU,QAAQ,YAAa,KAAI,IAKvD,GAJW,IAAI,OAAO,IAAI,EAAS,KAI5B,KAAK,GAAW,CACnB,KAAA,EAAS,QAAQ,IAAI,EAAS,MAAQ,GAC5C,EAAW,EAAS,QAAQ,IAAI,EAAS,IAAK,KAE/C,EAAK,UAAY,EAAS,QAAQ,aAAc,MAKlD,WAAU,SAAC,EAAW,GAEd,KAAA,GAAQ,IAAS,SAAU,EAAO,EAAK,WACzC,GAAA,EAAK,QAAQ,GAAW,OAAO,EAE7B,OAAA,OAIT,QAAA,QAAe;;ACydf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArgBA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,cACA,EAAA,QAAA,eACA,EAAA,QAAA,YAEA,EAAA,EAAA,QAAA,wBAEM,EAAkB,CAEvB,WAAY,GACZ,sBAAuB,EACvB,YAAa,IAGb,eAAgB,aAChB,cAAe,iBACf,cAAe,iBACf,kBAAmB,4BACnB,kBAAmB,0BACnB,iBAAkB,4BAGlB,cAAe,EACf,kBAAmB,EACnB,aAAyC,IAoB1C,EAAA,WAmCC,SAAA,EAAY,GArBZ,KAAA,aAAuB,EACvB,KAAA,UAAoB,EAIpB,KAAA,UAAwB,GACxB,KAAA,iBAAmD,IAAI,IACvD,KAAA,QAAoB,GACpB,KAAA,UAAmD,KAQnD,KAAA,SAAmB,EACnB,KAAA,UAAoB,EAOb,OAAQ,KAAO,KAEhB,KAAA,SAAW,EAAA,OAAO,EAAiB,GACnC,KAAA,WACJ,SAAS,cAAc,KAAK,SAAS,gBAEjC,KAAA,IAEA,KAAA,UAAY,SAAS,cAAc,KAAK,SAAS,eACjD,KAAA,UAAY,SAAS,cAAc,KAAK,SAAS,eACjD,KAAA,cAAgB,SAAS,cAC7B,KAAK,SAAS,mBAEV,KAAA,cAAgB,SAAS,cAC7B,KAAK,SAAS,mBAEV,KAAA,aAAe,SAAS,cAAc,KAAK,SAAS,kBAKpD,KAAA,WAAa,OAAO,YAAY,MAChC,KAAA,UAAW,EAGX,KAAA,aAAe,EAAA,sBACf,KAAA,cAAgB,EAAA,uBAGhB,KAAA,MAAQ,KAAK,SAAS,cACtB,KAAA,MAAQ,EAER,KAAA,UAiZP,OA9YC,EAAA,UAAA,QAAA,WACM,KAAA,UAAW,EAGA,CACf,KAAK,UACL,KAAK,UACL,KAAK,cACL,KAAK,cAGE,QAAQ,SAAA,GACX,GAAS,OAAT,EACG,MAAA,IAAI,MAAM,kBAKb,KAAA,WAAW,MAAQ,OAAO,WAC1B,KAAA,WAAW,OAAS,OAAO,YAC3B,KAAA,IAAM,KAAK,WAAW,WAAW,MAGjC,KAAA,cAIJ,OAAO,sBAAsB,KAAK,KAAK,KAAK,QAI9C,EAAA,UAAA,KAAA,WAGK,GAFC,KAAA,aAAc,EAEQ,OAAvB,KAAK,cACF,MAAA,IAAI,MACT,yEAKF,EAAA,QAAW,SAAS,KAAK,cAAe,UAGnC,KAAA,UAAY,IAGlB,EAAA,UAAA,KAAA,SAAK,GACA,QADA,IAAA,IAAA,EAAY,KAAK,YAChB,KAAK,SAAN,CAGJ,OAAO,sBAAsB,KAAK,KAAK,KAAK,OAEvC,KAAA,cAEC,IAAA,EAAA,KAAA,SAAE,EAAA,EAAA,WAAY,EAAA,EAAA,sBACd,EAAW,KAAK,WAAa,EAC7B,EAAgB,EAAY,KAAK,WACjC,EAAW,KAAK,MAAM,EAAgB,GAGxC,GAAA,EAAY,EACR,OAAA,EAIJ,EAAW,GACT,KAAA,YAAY,GAEb,KAAA,WAAa,IAGnB,EAAA,UAAA,YAAA,SAAY,GAAZ,IAAA,EAAA,KAQK,GAJoB,KAAK,UAAU,OACd,KAAK,iBAAiB,KAGN,KAAK,SAAS,aAAc,CAC9D,IAAA,EAAkB,KAAK,aAAa,GAAI,KACzC,KAAA,0BAA0B,IAI3B,KAAK,WAAa,KAAK,cACtB,KAAA,UAAY,KAAK,cAAc,KAC/B,KAAA,UAAU,KAAK,SAAA,GAEnB,EAAK,UAAY,KAKd,KAAA,aAIA,KAAA,cAAc,GAGd,KAAA,oBAEA,KAAA,iBAGN,EAAA,UAAA,cAAA,SAAc,GAET,KAAK,qBAAqB,EAAA,WACxB,KAAA,UAAU,WAAW,GAGtB,KAAA,UAAY,KAAK,UAAU,OAAO,SAAA,GAClC,OAAA,aAAoB,EAAA,UAAY,EAAS,UAC5C,EAAS,WAAW,IACb,KAEC,aAAoB,EAAA,YAGzB,KAAA,QAAU,KAAK,QAAQ,OAAO,SAAA,GAI3B,OAHH,EAAO,UACV,EAAO,WAAW,GAEZ,EAAO,YAIhB,EAAA,UAAA,kBAAA,WAAA,IAAA,EAAA,KAEM,KAAA,UAAU,QAAQ,SAAA,GAGhB,aAAoB,EAAA,WAG1B,EAAK,QAAQ,QAAQ,SAAA,GACA,EAAS,cAAc,EAAO,WAAW,KAS5D,EAAK,UAAU,eAAgB,CAAE,SAAQ,EAAE,OAAM,MAK/C,EAAK,qBAAqB,EAAA,WAAa,EAAK,UAAU,UACzD,EAAK,UAAU,WAAW,QAAQ,SAAA,GAEjB,EAAS,cAAc,KAEtC,EAAS,UAAW,EAEpB,EAAK,UAAU,UAAW,EAC1B,EAAK,UAAU,wBAOpB,EAAA,UAAA,cAAA,WAEM,KAAA,IAAI,UAAU,EAAG,EAAG,KAAK,WAAW,MAAO,KAAK,WAAW,QAG5D,KAAK,qBAAqB,EAAA,WAAa,KAAK,UAAU,UACpD,KAAA,UAAU,aAGX,KAAA,UAAY,KAAK,UAAU,OAAO,SAAA,GAElC,OAAA,aAAoB,EAAA,UAAY,EAAS,UAC5C,EAAS,cACF,KAEC,aAAoB,EAAA,YAKzB,KAAA,QAAU,KAAK,QAAQ,OAAO,SAAA,GAI3B,OAHH,EAAO,UACV,EAAO,aAED,EAAO,YAWhB,EAAA,UAAA,0BAAA,SAA0B,GAElB,IAFR,IAAA,EAAA,KACK,EAAS,KAAK,MAAsB,IAAhB,KAAK,UACtB,KAAK,iBAAiB,IAAI,IAChC,EAAS,KAAK,MAAsB,IAAhB,KAAK,UAIrB,KAAA,iBAAiB,IAAI,EAAQ,GAGlC,EAAgB,KAAK,SAAA,GAEpB,EAAK,UAAU,KAAK,GAGpB,EAAK,iBAAiB,OAAO,MAI/B,EAAA,UAAA,WAAA,WAAA,IAAA,EAAA,KAEO,KAAK,qBAAqB,EAAA,WAG3B,KAAK,UAAU,UAIf,KAAK,UAAU,WAAW,QAI3B,KAAK,UAAY,KAAK,UACpB,KAAA,SAAU,EAQV,KAAA,QAAQ,KACZ,IAAI,EAAA,OAAO,CACV,OAAQ,EAAA,UAAU,KAAK,UAAU,WAAW,IAC5C,SAAU,EAAA,UAAU,KAAK,UAAU,UACnC,OAAQ,EAAA,UAAU,KAAK,UAAU,WAInC,WAAW,WACV,EAAK,SAAU,GACb,KAAK,SAAS,eAInB,EAAA,UAAA,YAAA,SAAY,QAAA,IAAA,IAAA,EAAA,IACP,IAAA,GAAY,EAKZ,GAJgC,IAAhC,OAAO,KAAK,GAAS,SACxB,GAAY,GAGT,GAAa,EAAQ,MAAO,CAC3B,GAAmB,OAAnB,KAAK,UACF,MAAA,IAAI,MAAM,0CAEb,KAAK,MAAQ,EACX,KAAA,UAAU,UAAY,KAEtB,KAAA,UAAU,UAAY,IAAG,EAAQ,OAAS,KAAK,OAGlD,GAAA,GAAa,EAAQ,MAAO,CAC3B,GAAmB,OAAnB,KAAK,UACF,MAAA,IAAI,MAAM,0CAEZ,KAAA,UAAU,UAAY,IAAG,EAAQ,OAAS,KAAK,SAMtD,EAAA,UAAA,UAAA,SAAU,EAAmB,GAA7B,IAAA,EAAA,KACS,OAAA,GACF,IAAA,wBACsB,EAG1B,MACI,IAAA,WACA,KAAK,qBAAqB,EAAA,YACxB,KAAA,UAAU,cAAe,GAE/B,MACI,IAAA,YACA,KAAK,qBAAqB,EAAA,YACxB,KAAA,UAAU,cAAe,GAE/B,MACI,IAAA,UACA,KAAK,qBAAqB,EAAA,YACxB,KAAA,UAAU,aAAc,GAE9B,MACI,IAAA,WACA,KAAK,qBAAqB,EAAA,YACxB,KAAA,UAAU,aAAc,GAE9B,MACI,IAAA,UACC,KAAA,UAAW,EAChB,MACI,IAAA,WACC,KAAA,UAAW,EAChB,MACI,IAAA,cACA,KAAK,qBAAqB,EAAA,WACxB,KAAA,UAAU,aAEhB,MACI,IAAA,eACA,KAAK,qBAAqB,EAAA,WACxB,KAAA,UAAU,cAEhB,MACI,IAAA,eACI,IAAA,EAAA,EAAA,SAAU,EAAA,EAAA,OAClB,EAAS,UAAW,EACpB,EAAO,UAAW,EAEb,KAAA,OAAS,EAAS,WAClB,KAAA,YAAY,CAChB,MAAO,KAAK,QAMP,IAAA,EAAoB,EAAA,SAAS,UAClC,EACA,KAAK,SAAS,mBAGX,EAAkB,SAChB,KAAA,UAAY,KAAK,UAAU,OAAO,IAGxC,MACI,IAAA,gBACC,KAAA,MAAQ,KAAK,OAAS,EACtB,KAAA,YAAY,CAChB,MAAO,KAAK,QAIT,KAAK,OAAS,GACZ,KAAA,UAAY,KAAK,cAAc,KAC/B,KAAA,UAAU,KAAK,SAAA,GAEnB,EAAK,UAAY,KAGb,KAAA,UAAU,aAEhB,MACI,IAAA,eACA,IAAC,KAAK,cACH,MAAA,IAAI,MAAM,oBAIb,KAAK,SAER,EAAA,QAAW,YAAY,KAAK,cAAe,UAG3C,EAAA,QAAW,SAAS,KAAK,cAAe,UAEpC,KAAA,UAAY,KAAK,SAClB,KAAK,UACH,KAAA,OAEN,MACI,IAAA,YAIA,GADC,KAAA,UAAW,EACU,OAAtB,KAAK,aACF,MAAA,IAAI,MAAM,mBAGjB,EAAA,QAAW,YAAY,KAAK,aAAc,UAC1C,MACD,QACO,MAAA,IAAI,MAAM,sBAAsB,KAG1C,EAvdA,GAydA,QAAA,QAAe;;ACldf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA3CA,IAAM,EAA8C,CAInD,CACC,MAAO,UACP,GAAE,SAAC,GACgB,KAAd,EAAE,SACC,OAAQ,KAAK,UAAU,oBAEZ,KAAd,EAAE,QACC,OAAQ,KAAK,UAAU,eACL,KAAd,EAAE,QACN,OAAQ,KAAK,UAAU,YACL,KAAd,EAAE,QACN,OAAQ,KAAK,UAAU,WACL,KAAd,EAAE,QACD,OAAQ,KAAK,YAGjB,OAAQ,KAAK,UAAU,WAFvB,OAAQ,KAAK,OAII,KAAd,EAAE,SACN,OAAQ,KAAK,UAAU,kBAIhC,CACC,MAAO,QACP,GAAE,SAAC,GACgB,KAAd,EAAE,QACC,OAAQ,KAAK,UAAU,gBACL,KAAd,EAAE,QACN,OAAQ,KAAK,UAAU,aACL,KAAd,EAAE,QACN,OAAQ,KAAK,UAAU,YACL,KAAd,EAAE,SACN,OAAQ,KAAK,UAAU,eAMjC,QAAA,QAAe;;ACgBN,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAnET,IAAA,EAAA,QAAA,YAGA,EAAA,EAAA,QAAA,6BAWA,SAAS,EAAkB,GAEH,mBAAZ,GACV,IAID,EAAA,QAAuB,QAAQ,SAAA,GAC1B,EAAS,SACZ,SAAS,iBAAiB,EAAS,UAAU,QAAQ,SAAA,GACpD,EAAI,iBAAiB,EAAS,MAAO,EAAS,MAI/C,SAAS,iBAAiB,EAAS,MAAO,EAAS,MAMtD,SAAS,EAA+B,IAIhC,SAAU,YACW,aAAxB,SAAS,WACe,YAAxB,SAAS,YAEZ,EAAkB,GAElB,SAAS,iBAAiB,mBAAoB,WAC7C,EAAkB,KAKrB,SAAS,IAaR,OAAO,iBAAiB,SAAU,EAAA,cAVzB,WACR,QAAQ,IAAI,0BAEN,IAAA,EAA0B,IAArB,OAAO,YACd,SAAS,iBACZ,SAAS,gBAAgB,MAAM,YAAY,OAAW,EAAE,OAKA,MAIpB,QAAA,+BAAA,EAA9B,QAAA,6BAAA;;ACnET,aAiBA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAVC,QAAQ,IAAI,mBAGb,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,QAAA,YAKA,EAAA,+BACA,EAAA,+BAA+B,WAC1B,IAAA,EAAA","file":"scripts.a3205626.map","sourceRoot":"../src","sourcesContent":["/** utility functions here\n *\n */\n\n// #region debouncing & throttling\n// source: https://css-tricks.com/debouncing-throttling-explained-examples/\n\nfunction initThrottler(fn: Function, timeout: number) {\n\tlet canRun = true;\n\n\treturn function throttled() {\n\t\tif (canRun) {\n\t\t\tcanRun = false;\n\t\t\t// @ts-ignore\n\t\t\tfn.apply(this, arguments);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcanRun = true;\n\t\t\t}, timeout);\n\t\t}\n\t};\n}\n\nfunction initDebouncer(fn: (...args: []) => void, timout: number) {\n\tlet timer: number;\n\n\treturn function debounced() {\n\t\tif (timer) {\n\t\t\twindow.clearTimeout(timer);\n\t\t}\n\n\t\ttimer = window.setTimeout(function() {\n\t\t\t// @ts-ignore\n\t\t\tfn.apply(this, arguments);\n\t\t}, timout);\n\t};\n}\n// #endregion\n\n// TODO: need to still test this\n// source: https://stackoverflow.com/questions/728360/how-do-i-correctly-clone-a-javascript-object\nfunction deepClone(obj: any) {\n\t// let copy: Object | Date; // throws error with copy.setTime b/c it has Object\n\tlet copy: any;\n\n\t// check if primitive value, then return (base case of recursive deepClone)\n\tif (typeof obj !== 'object' || obj == null) return obj;\n\n\t// copying if its a date\n\tif (obj instanceof Date) {\n\t\tcopy = new Date();\n\t\tcopy.setTime(obj.getTime());\n\t\treturn copy;\n\t}\n\n\t// Handle Array\n\tif (obj instanceof Array) {\n\t\tcopy = [];\n\t\tobj.forEach((elem, index) => {\n\t\t\tcopy[index] = deepClone(elem);\n\t\t});\n\t\treturn copy;\n\t}\n\n\t// Handle Obj\n\tif (obj instanceof Object) {\n\t\tcopy = {};\n\t\tfor (const attr in obj) {\n\t\t\tif (obj.hasOwnProperty(attr)) {\n\t\t\t\tcopy[attr] = deepClone(obj[attr]);\n\t\t\t}\n\t\t}\n\t\treturn copy;\n\t}\n}\n\nfunction extend(...args: any[]) {\n\tconst extendedObj: any = {};\n\n\tfor (let i = 0; i < arguments.length; i += 1) {\n\t\tconst obj = arguments[i];\n\t\tif (!(obj instanceof Object)) break;\n\t\tfor (const key in obj) {\n\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\textendedObj[key] = deepClone(obj[key]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn extendedObj;\n}\n\n// Note: toFixed(n) --> returns a string\nfunction round(float: number, places: number = 2) {\n\tconst factorPlaces = Math.pow(10, places);\n\treturn Math.round(float * factorPlaces) / factorPlaces;\n}\n\nfunction randomChance(chance: number = 0.5): boolean {\n\treturn Math.random() < chance;\n}\n\nfunction getRandomNum(\n\tmin: number,\n\tmax: number,\n\tblnNegAllowed: boolean = true,\n\tplaces: number = 2,\n) {\n\tlet randomNumber = round(Math.random() * (max - min) + max, places);\n\tif (blnNegAllowed) {\n\t\trandomNumber = randomChance() ? -1 * randomNumber : randomNumber;\n\t}\n\treturn randomNumber;\n}\n\nexport {\n\tinitThrottler,\n\tinitDebouncer,\n\tdeepClone,\n\textend,\n\tround,\n\trandomChance,\n\tgetRandomNum,\n};\n","import Game from './Game';\n\nexport abstract class DrawableClass {\n\tcurrPoints: PointModel[] = [];\n\torigin: PointModel;\n\trSize: number;\n\toffSet: number; // the angle in degrees, counter clockwise from 12\n\tstrokeStyle: string;\n\tonScreen: boolean; // when true, means at least one point is on the canvas\n\tisActive: boolean; // determines if its been hit or not\n\tvelocity: VelocityModel;\n\n\tstatic canvasElem: { width: number; height: number };\n\tstatic ctx: any;\n\tstatic defaultSettings: any = {\n\t\toffSet: 0,\n\t\tstrokeStyle: 'white',\n\t};\n\n\tconstructor(options: DrawableClassArguments) {\n\t\t/** NOTE: this is necessary, because there's a race condition where\n\t\t * this abstract class may be created prior to the Game creation\n\t\t */\n\t\tif (!DrawableClass.canvasElem) {\n\t\t\tDrawableClass.canvasElem = options.canvasElem\n\t\t\t\t? options.canvasElem\n\t\t\t\t: (<any>window).Game.canvasElem;\n\t\t}\n\n\t\tif (!DrawableClass.ctx) {\n\t\t\tDrawableClass.ctx = options.ctx ? options.ctx : (<any>window).Game.ctx;\n\t\t}\n\n\t\tthis.velocity = this.getInitVelocity(options);\n\t\tthis.origin = this.getInitOrigin(options);\n\t\tthis.rSize = options.rSize;\n\t\tthis.strokeStyle =\n\t\t\toptions.strokeStyle || DrawableClass.defaultSettings.strokeStyle;\n\t\tthis.offSet =\n\t\t\tObject.prototype.hasOwnProperty.call(options, 'offSet') &&\n\t\t\toptions.offSet !== undefined\n\t\t\t\t? options.offSet\n\t\t\t\t: DrawableClass.defaultSettings.offSet; // Note: overkill, but prevents footgun if default settings were not 0, and we were trying to pass in 0 as an options.offSet\n\n\t\t// TODO: convert this into getters & setters\n\t\tthis.onScreen = this.isVisible();\n\t\tthis.isActive = options.isActive || true;\n\t}\n\n\tpublic abstract getInitOrigin(options: { origin?: PointModel }): PointModel;\n\n\t// ?? If I want flexibility in the options argument here for classes that implement this, should I use the intersect on child classes?\n\tpublic abstract getInitVelocity(options: {\n\t\tvelocity?: VelocityModel;\n\t\toffSet?: number;\n\t}): VelocityModel;\n\n\t/**\n\t * Transforms origin & then recalculates all the currPoints afterwards\n\t * @param ticks\n\t */\n\tpublic abstract calcPoints(ticks: number): PointModel[];\n\n\t/**\n\t * Draws all the points from currPoints[] onto ctx (stored off of static gameRef property)\n\t * @return {boolean} - whether the drawable class was drawn or not\n\t */\n\tpublic abstract drawPoints(): boolean;\n\n\tprotected isVisible(): boolean {\n\t\tconst xLimit = DrawableClass.canvasElem.width;\n\t\tconst yLimit = DrawableClass.canvasElem.height;\n\n\t\treturn this.currPoints.every(pt => {\n\t\t\tconst { x, y } = pt;\n\t\t\treturn x >= 0 && x < xLimit && y >= 0 && y <= yLimit;\n\t\t});\n\t}\n\n\t// TODO: make this a property, & invokes function instead\n\t// made the mistake of doing if (isHidden) --> which is always true\n\tprotected isHidden(): boolean {\n\t\tconst xLimit = DrawableClass.canvasElem.width;\n\t\tconst yLimit = DrawableClass.canvasElem.height;\n\n\t\treturn this.currPoints.every(pt => {\n\t\t\tconst { x, y } = pt;\n\t\t\treturn x < 0 || x > xLimit || y < 0 || y > yLimit;\n\t\t});\n\t}\n\tprotected getBounds() {\n\t\tlet leftBound: number;\n\t\tlet rightBound: number;\n\t\tlet upperBound: number;\n\t\tlet lowerBound: number;\n\n\t\tthis.currPoints.forEach((pt, i) => {\n\t\t\tconst { x, y } = pt;\n\t\t\t// Set default:\n\t\t\tif (i === 0) {\n\t\t\t\tleftBound = rightBound = x;\n\t\t\t\tupperBound = lowerBound = y;\n\t\t\t} else {\n\t\t\t\tleftBound = Math.min(leftBound, x);\n\t\t\t\trightBound = Math.max(rightBound, x);\n\t\t\t\tupperBound = Math.min(upperBound, y);\n\t\t\t\tlowerBound = Math.max(lowerBound, y);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * WEIRD ERROR: Variable 'leftBound' is used before being assigned\n\t\t */\n\t\treturn {\n\t\t\t// @ts-ignore\n\t\t\tleftBound,\n\t\t\t// @ts-ignore\n\t\t\trightBound,\n\t\t\t// @ts-ignore\n\t\t\tupperBound,\n\t\t\t// @ts-ignore\n\t\t\tlowerBound,\n\t\t};\n\t}\n}\n\nexport default DrawableClass;\n","import { extend, deepClone, round, getRandomNum, randomChance } from '../utils';\nimport DrawableClass from './DrawableClass';\n\nexport class Asteroid extends DrawableClass {\n\tsides: number;\n\tspacer: number;\n\tscoreValue: number;\n\tlevel: number;\n\n\tstatic defaultSettings = {\n\t\t// animate: true, // not useful yet\n\t\tlevel: 1,\n\t\tscoreValue: 5,\n\t\trSize: 45,\n\t\tsides: 10,\n\t\tspacer: 1,\n\n\t\tvelocityOptions: {\n\t\t\t// magnitude: {\n\t\t\t// \tmax: 6.5,\n\t\t\t// \tmin: 2,\n\t\t\t// },\n\t\t\tx: {\n\t\t\t\tmax: 2.75,\n\t\t\t\tmin: 0.75,\n\t\t\t\tblnAllowNeg: true,\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tmax: 2.5,\n\t\t\t\tmin: 0.75,\n\t\t\t\tblnAllowNeg: true,\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tmax: 1.5,\n\t\t\t\tmin: 0.2,\n\t\t\t\tblnAllowNeg: true,\n\t\t\t},\n\t\t},\n\t};\n\n\tstatic clone(asteroid: Asteroid): Asteroid {\n\t\tconst {\n\t\t\tvelocity,\n\t\t\torigin,\n\t\t\trSize,\n\t\t\toffSet,\n\t\t\tstrokeStyle,\n\t\t\tsides,\n\t\t\tspacer,\n\t\t\tlevel,\n\t\t} = deepClone(asteroid); // Note: I dont think I need to do a deep clone?\n\n\t\treturn new Asteroid({\n\t\t\torigin,\n\t\t\trSize,\n\t\t\toffSet,\n\t\t\tstrokeStyle,\n\t\t\tsides,\n\t\t\tspacer,\n\t\t\tlevel,\n\t\t\tvelocity,\n\t\t});\n\t}\n\n\tstatic makeChild(\n\t\tasteroid: Asteroid,\n\t\tmaxChild: number,\n\t\tnumChild: number = 2,\n\t): Asteroid[] {\n\t\tif (asteroid.level >= maxChild) return [];\n\n\t\tconst asteroidList = [];\n\t\tconst level = asteroid.level + 1;\n\t\tconst rSize = round(asteroid.rSize / 2);\n\t\tconst scoreValue = asteroid.scoreValue * 2;\n\t\tconst {\n\t\t\torigin,\n\t\t\tstrokeStyle,\n\t\t\tsides,\n\t\t\tspacer,\n\t\t\tvelocity: {\n\t\t\t\ttranslateX: prevX,\n\t\t\t\ttranslateY: prevY,\n\t\t\t\trotation: prevRotation,\n\t\t\t},\n\t\t} = asteroid;\n\n\t\t// Get a random direction & make a new Asteroid\n\t\tfor (let i = 1; i <= numChild; i += 1) {\n\t\t\tconst randomFactor = 0.9 + i / (i + 2);\n\t\t\tconst velocity = {\n\t\t\t\ttranslateX: randomChance()\n\t\t\t\t\t? round(prevX * randomFactor)\n\t\t\t\t\t: round(prevX * randomFactor) * -1,\n\t\t\t\ttranslateY: randomChance()\n\t\t\t\t\t? round(prevY * randomFactor)\n\t\t\t\t\t: round(prevY & randomFactor) * -1,\n\t\t\t\trotation: randomChance()\n\t\t\t\t\t? round(prevRotation * randomFactor)\n\t\t\t\t\t: round(prevRotation * randomFactor) * -1,\n\t\t\t};\n\n\t\t\tconst childAsteroid = new Asteroid({\n\t\t\t\torigin,\n\t\t\t\tsides,\n\t\t\t\tvelocity,\n\t\t\t\tlevel,\n\t\t\t\trSize,\n\t\t\t\tscoreValue,\n\t\t\t\tstrokeStyle,\n\t\t\t\tspacer,\n\t\t\t});\n\n\t\t\tasteroidList.push(childAsteroid);\n\t\t}\n\n\t\treturn asteroidList;\n\t}\n\n\tconstructor(constructorOptions?: AsteroidArguments) {\n\t\tconst options = extend(Asteroid.defaultSettings, constructorOptions);\n\t\tsuper(options);\n\n\t\tthis.sides = options.sides || Asteroid.defaultSettings.sides;\n\t\tthis.spacer =\n\t\t\tObject.prototype.hasOwnProperty.call(options, 'spacer') &&\n\t\t\toptions.spacer !== undefined\n\t\t\t\t? options.spacer\n\t\t\t\t: Asteroid.defaultSettings.spacer; // Note: overkill, but prevents footgun if default settings were not 0, and we were trying to pass in 0 as an options.spacer\n\t\tthis.level = options.level;\n\t\tthis.scoreValue = options.scoreValue;\n\t}\n\n\tpublic containsPoint(testPoint: PointModel) {\n\t\tif (!this.currPoints.length) return false;\n\n\t\t// TODO: should save this as a property of the asteroids object, instead of recalculating??\n\t\t// How would I want to cache the value here?\n\t\tconst { leftBound, rightBound, upperBound, lowerBound } = this.getBounds();\n\n\t\tif (\n\t\t\ttestPoint.x < leftBound ||\n\t\t\ttestPoint.x > rightBound ||\n\t\t\ttestPoint.y < upperBound ||\n\t\t\ttestPoint.y > lowerBound\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet isOnLine = false; // bln flag to check if its on the line, then containsPoints ==> true!\n\t\tconst lineResults = this.currPoints.map((pt1, index, coordArr) => {\n\t\t\tconst x1 = pt1.x;\n\t\t\tconst y1 = pt1.y;\n\t\t\tconst x2 =\n\t\t\t\tindex + 1 < coordArr.length ? coordArr[index + 1].x : coordArr[0].x;\n\t\t\tconst y2 =\n\t\t\t\tindex + 1 < coordArr.length ? coordArr[index + 1].y : coordArr[0].y;\n\t\t\tconst m = (y1 - y2) / (x1 - x2);\n\t\t\tconst b = y1 - m * x1;\n\n\t\t\t// Edge Case: slope is a vertical line\n\t\t\tif (m === Infinity) {\n\t\t\t\tif (testPoint.x === x1) {\n\t\t\t\t\tisOnLine = true;\n\t\t\t\t\treturn true; // this really doesn't matter\n\t\t\t\t}\n\t\t\t\treturn testPoint.x < x1;\n\t\t\t}\n\t\t\tif (testPoint.y === m * testPoint.x + b) {\n\t\t\t\tisOnLine = true;\n\t\t\t\treturn true; // this really doesn't matter\n\t\t\t}\n\t\t\treturn testPoint.y < m * testPoint.x + b;\n\t\t});\n\n\t\tif (isOnLine) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// check how many lines it was below\n\t\tlet numLinesBelow = 0;\n\t\tconst shouldEqual = Math.ceil(lineResults.length / 2);\n\t\tlineResults.forEach(res => {\n\t\t\tif (res) {\n\t\t\t\tnumLinesBelow += 1;\n\t\t\t}\n\t\t});\n\n\t\treturn numLinesBelow === shouldEqual;\n\t}\n\n\tpublic getInitVelocity(options: any): VelocityModel {\n\t\t// If a velocity is given, just use that instead of calc new one:\n\t\tif (options.velocity) {\n\t\t\treturn options.velocity;\n\t\t}\n\n\t\tconst { x, y, rotation: r } = Asteroid.defaultSettings.velocityOptions;\n\n\t\treturn {\n\t\t\ttranslateX: getRandomNum(x.min, x.max, x.blnAllowNeg),\n\t\t\ttranslateY: getRandomNum(y.min, y.max, y.blnAllowNeg),\n\t\t\trotation: getRandomNum(r.min, r.max, r.blnAllowNeg),\n\t\t};\n\t}\n\n\tpublic getInitOrigin(options: any): PointModel {\n\t\tif (options.origin) {\n\t\t\treturn options.origin;\n\t\t}\n\n\t\t// Note: prevents foot gun, where the order in which you call initializer fn does not matter\n\t\tif (!this.velocity) {\n\t\t\tthis.velocity = this.getInitVelocity(options);\n\t\t}\n\n\t\tlet quadrant;\n\t\tif (this.velocity.translateX > 0) {\n\t\t\tquadrant = this.velocity.translateY > 0 ? 2 : 3;\n\t\t} else {\n\t\t\tquadrant = this.velocity.translateY > 0 ? 1 : 4;\n\t\t}\n\n\t\tconst width = DrawableClass.canvasElem.width;\n\t\tconst height = DrawableClass.canvasElem.height;\n\t\tlet origin;\n\n\t\tswitch (quadrant) {\n\t\t\tcase 1:\n\t\t\t\torigin = {\n\t\t\t\t\tx: width + 10,\n\t\t\t\t\ty: -10,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\torigin = {\n\t\t\t\t\tx: -10,\n\t\t\t\t\ty: -10,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\torigin = {\n\t\t\t\t\tx: -10,\n\t\t\t\t\ty: height + 10,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\torigin = {\n\t\t\t\t\tx: width + 10,\n\t\t\t\t\ty: height + 10,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Error: could not determine the right quadrant for asteroid',\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn origin;\n\t}\n\n\tpublic calcPoints(ticks: number): PointModel[] {\n\t\tconst moveXBy = ticks * this.velocity.translateX;\n\t\tconst moveYBy = ticks * this.velocity.translateY;\n\n\t\tif (!this.origin) {\n\t\t\tthrow new Error(`Cannot calcPoints if origin is null`);\n\t\t}\n\n\t\tthis.origin.x = round((this.origin.x + moveXBy) * 100) / 100;\n\t\tthis.origin.y = round((this.origin.y + moveYBy) * 100) / 100;\n\n\t\tthis.offSet += this.velocity.rotation;\n\n\t\tthis.currPoints = [];\n\t\tconst angleUnit = 360 / this.sides;\n\t\tfor (let i = 0; i < this.sides; i += 1) {\n\t\t\tconst angle = angleUnit * i + this.offSet;\n\t\t\tconst newX =\n\t\t\t\tthis.origin.x + Math.sin((Math.PI * angle) / 180) * this.rSize;\n\t\t\tconst newY =\n\t\t\t\tthis.origin.y + Math.cos((Math.PI * angle) / 180) * this.rSize;\n\t\t\tthis.currPoints.push({\n\t\t\t\tx: round(newX * 100) / 100,\n\t\t\t\ty: round(newY * 100) / 100,\n\t\t\t});\n\t\t}\n\n\t\tif (!this.onScreen && this.isVisible()) {\n\t\t\tthis.onScreen = true;\n\t\t} else if (this.isHidden()) {\n\t\t\tthis.onScreen = false;\n\t\t\tthis.reframe();\n\t\t}\n\t\treturn this.currPoints;\n\t}\n\n\tpublic drawPoints() {\n\t\tif (!this.isActive) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst ctx = DrawableClass.ctx;\n\n\t\tctx.save();\n\t\tctx.strokeStyle = this.strokeStyle;\n\t\tctx.beginPath();\n\t\tthis.currPoints.forEach((pt, i) => {\n\t\t\t// Draw points:\n\t\t\tif (i === 0) {\n\t\t\t\tctx.moveTo(pt.x, pt.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(pt.x, pt.y);\n\t\t\t}\n\t\t});\n\t\tctx.closePath();\n\t\tctx.stroke();\n\t\tctx.restore();\n\n\t\treturn true;\n\t}\n\n\tprivate reframe() {\n\t\tconst xLimit = DrawableClass.canvasElem.width;\n\t\tconst yLimit = DrawableClass.canvasElem.height;\n\t\tlet adjustXBy = 0;\n\t\tlet adjustYBy = 0;\n\n\t\t// Determine left, right, top, bottom bounds of our shape:\n\t\tconst { leftBound, rightBound, upperBound, lowerBound } = this.getBounds();\n\n\t\t// ===== ADJUST X-coordinates =====\n\t\t// CASE: moving right\n\t\tif (this.velocity.translateX > 0) {\n\t\t\t// Check to see if the trailing edge (far left x-coord on shape) is off screen\n\t\t\tif (leftBound > xLimit) {\n\t\t\t\t// then adjust all the x-coordinates\n\t\t\t\tadjustXBy = -1 * (rightBound + this.spacer);\n\t\t\t}\n\t\t} else {\n\t\t\t// CASE: moving left\n\t\t\t// checkt to see if shape may be off the canvas on the left-side\n\t\t\tif (rightBound < 0) {\n\t\t\t\t// all x-coordinates are off the screen & we need to update\n\t\t\t\tadjustXBy = Math.abs(leftBound) + xLimit + this.spacer;\n\t\t\t}\n\t\t}\n\n\t\t// ===== ADJUST Y-coordinates =====\n\t\t// CASE: moving down\n\t\tif (this.velocity.translateY > 0) {\n\t\t\t// Case: moving down, could potentially be below canvas\n\t\t\tif (upperBound > yLimit) {\n\t\t\t\tadjustYBy = -1 * (lowerBound + this.spacer);\n\t\t\t}\n\t\t} else {\n\t\t\t// Case; moving up\n\t\t\t// check if the entire shape is above the canvas\n\t\t\tif (lowerBound < 0) {\n\t\t\t\tadjustYBy = Math.abs(upperBound) + yLimit + this.spacer;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.origin) {\n\t\t\tthrow new Error(`Cannot reframe() if origin is null`);\n\t\t}\n\n\t\tthis.origin.x = this.origin.x + adjustXBy;\n\t\tthis.origin.y = this.origin.y + adjustYBy;\n\n\t\tthis.currPoints.forEach(pt => {\n\t\t\tpt.x += adjustXBy;\n\t\t\tpt.y += adjustYBy;\n\t\t});\n\t}\n}\n\nexport function makeAsteroid(\n\tasteroidOptions: AsteroidArguments,\n\tdelay: number = 0,\n): Promise<Asteroid> {\n\treturn new Promise(resolve => {\n\t\tsetTimeout(() => {\n\t\t\tresolve(new Asteroid(asteroidOptions));\n\t\t}, delay);\n\t});\n}\n\nexport function initAsteroidFactory() {\n\tlet lastTimestamp = Date.now();\n\t// TODO: NEED TO CHECK THAT THE GAME IS ALSO NOT PAUSED\n\n\t// TODO: Need to resolve asteroid, with original parameters --> if game is paused I call it again\n\treturn function makeAsteroid(\n\t\tasteroidOptions: AsteroidArguments = {},\n\t\tminDelay = 500,\n\t\tblnForce = false,\n\t): Promise<Asteroid> {\n\t\treturn new Promise(resolve => {\n\t\t\t// Case: blnForce (create asteroid independent of last time stamp)\n\t\t\tif (blnForce) {\n\t\t\t\tif (minDelay === 0) {\n\t\t\t\t\tresolve(new Asteroid(asteroidOptions));\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tresolve(new Asteroid(asteroidOptions));\n\t\t\t\t\t}, minDelay);\n\t\t\t\t}\n\n\t\t\t\tlastTimestamp = Date.now();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Case: not blnForce --> either you can make it,\n\t\t\t// or check again later to see if you need to make it\n\t\t\tif (Date.now() - lastTimestamp > minDelay) {\n\t\t\t\tresolve(new Asteroid(asteroidOptions));\n\t\t\t\tlastTimestamp = Date.now();\n\t\t\t} else {\n\t\t\t\tconst intervalTime = parseInt(`${minDelay / 3}`, 10);\n\n\t\t\t\tconst intervalRef = setInterval(() => {\n\t\t\t\t\tif (Date.now() - lastTimestamp > minDelay) {\n\t\t\t\t\t\tclearInterval(intervalRef);\n\t\t\t\t\t\tresolve(new Asteroid(asteroidOptions));\n\t\t\t\t\t\tlastTimestamp = Date.now();\n\t\t\t\t\t}\n\t\t\t\t}, intervalTime);\n\t\t\t}\n\t\t});\n\t};\n}\n","import { extend } from '../utils';\nimport DrawableClass from './DrawableClass';\n\nexport class Spaceship extends DrawableClass {\n\tgameRef: any;\n\tthrottleTimer: any;\n\tthrustersOn: boolean = false;\n\tturningRight: boolean = false;\n\tturningLeft: boolean = false;\n\tisFiring: boolean = false;\n\n\tstatic defaultSettings = {\n\t\t// For Drawable Class properties\n\t\trSize: 25, // controls the size of the spaceship\n\n\t\t// Unique to Spaceship\n\t\tmaxSpeed: 8,\n\t\tminThrust: 3, // starting Magnitude of velocity as soon as throttleOn\n\t\trotationSpeed: 6,\n\t\tacceleration: 1,\n\t\tdeceleration: 0.9, // must be less than one\n\t\tadjustedH: 0.7, // used to calculate the distance of the trailing tail points\n\t};\n\n\tmaxSpeed: number;\n\tminThrust: number;\n\trotationSpeed: number;\n\tacceleration: number;\n\tdeceleration: number;\n\n\tconstructor(argOptions: SpaceshipArguments = {}) {\n\t\tsuper(extend(Spaceship.defaultSettings, argOptions)); // Note: main reason I need to do this is to pass in the rSize value\n\n\t\t// Note: Since, A 'super' call must be the first statement in the constructor when a class contains initialized properties or has parameter properties.\n\t\t// I have to extend the obj twice\n\t\tconst shipSettings = extend(Spaceship.defaultSettings, argOptions);\n\t\tthis.maxSpeed = shipSettings.maxSpeed;\n\t\tthis.minThrust = shipSettings.minThurst;\n\t\tthis.rotationSpeed = shipSettings.rotationSpeed;\n\t\tthis.acceleration = shipSettings.acceleration;\n\t\tthis.deceleration = shipSettings.deceleration;\n\n\t\t// Properties Unique to Spaceship:\n\t\tthis.throttleTimer;\n\t}\n\n\tpublic throttleOff(): any {\n\t\tthis.thrustersOn = false;\n\t}\n\tpublic throttleOn(): any {\n\t\tthis.thrustersOn = true;\n\t}\n\n\t/** ABSTRACT method implementations from DrawableClass*/\n\n\tgetInitOrigin(options: any): PointModel {\n\t\tif (options.origin) {\n\t\t\treturn options.origin;\n\t\t}\n\t\tconst x = Math.floor(DrawableClass.canvasElem.width / 2);\n\t\tconst y = Math.floor(DrawableClass.canvasElem.height / 2);\n\t\treturn { x, y };\n\t}\n\n\tgetInitVelocity(options: any): VelocityModel {\n\t\treturn { translateX: 0, translateY: 0, rotation: 0 };\n\n\t\t// NEVER going to allow for initially moving spaceship!\n\t\t// return options.velocity\n\t\t// \t? options.velocity\n\t\t// \t: { translateX: 0, translateY: 0, rotation: 0 };\n\t}\n\n\t// TODO: should this be abstracted & put on the drawableClass instead?\n\t/**\n\t * calculates all the currPoints given the origin\n\t * should get invoked after the origin has been transformed\n\t */\n\tprivate calcPointsFromOrigin() {\n\t\tconst h = this.rSize;\n\t\tthis.currPoints = [];\n\t\tfor (let angle = 0; angle < 360; angle += 120) {\n\t\t\tconst adjustedH =\n\t\t\t\tangle === 0 ? h : h * Spaceship.defaultSettings.adjustedH;\n\t\t\tconst currAngle = ((angle + this.offSet) * Math.PI) / 180;\n\t\t\tconst x = this.origin.x + Math.sin(currAngle) * adjustedH;\n\t\t\tconst y = this.origin.y - Math.cos(currAngle) * adjustedH;\n\t\t\tthis.currPoints.push({ x, y });\n\t\t}\n\t}\n\n\tpublic calcPoints(numTicks: number): PointModel[] {\n\t\tif (!this.isActive) return [];\n\n\t\t// Transform Origin:\n\t\tthis.velocity = this.calcVelocity(numTicks);\n\t\tthis.origin.x += this.velocity.translateX;\n\t\tthis.origin.y -= this.velocity.translateY; // subtract, because canvas coordinates have inverted y-axis\n\n\t\tthis.calcPointsFromOrigin();\n\n\t\tif (!this.onScreen && this.isVisible()) {\n\t\t\tthis.onScreen = true;\n\t\t} else if (this.isHidden()) {\n\t\t\tthis.onScreen = false;\n\t\t\tthis.reframe();\n\t\t}\n\n\t\treturn this.currPoints;\n\t}\n\n\tpublic drawPoints(): boolean {\n\t\tif (!this.isActive) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst ctx = DrawableClass.ctx;\n\n\t\t// Draw the main triangle\n\t\tctx.globalCompositeOperation = 'source-over';\n\t\tctx.save();\n\t\tctx.strokeStyle = this.strokeStyle;\n\t\t// ctx.lineWidth = 2;\n\t\tctx.beginPath();\n\t\tthis.currPoints.forEach((pt, i) => {\n\t\t\t// Draw points:\n\t\t\tif (i === 0) {\n\t\t\t\tctx.moveTo(pt.x, pt.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(pt.x, pt.y);\n\t\t\t}\n\t\t});\n\t\tctx.closePath();\n\t\tctx.stroke();\n\t\tctx.restore();\n\n\t\t// TODO: make the two tails on the ship\n\n\t\treturn true;\n\t}\n\n\tprivate reframe() {\n\t\tconst xLimit = DrawableClass.canvasElem.width;\n\t\tconst yLimit = DrawableClass.canvasElem.height;\n\t\tlet adjustXBy = 0;\n\t\tlet adjustYBy = 0;\n\n\t\t// Determine left, right, top, bottom bounds of our shape:\n\t\tconst { leftBound, rightBound, upperBound, lowerBound } = this.getBounds();\n\n\t\t// Determine X-axis adjustment:\n\t\tif (leftBound > xLimit) {\n\t\t\tadjustXBy = -1 * xLimit;\n\t\t} else if (rightBound < 0) {\n\t\t\tadjustXBy = Math.abs(leftBound) + xLimit;\n\t\t}\n\n\t\t// Determine y-axis adjustment:\n\t\tif (upperBound > yLimit) {\n\t\t\tadjustYBy = -1 * lowerBound;\n\t\t} else if (lowerBound < 0) {\n\t\t\tadjustYBy = Math.abs(upperBound) + yLimit;\n\t\t}\n\n\t\tthis.origin.x += adjustXBy;\n\t\tthis.origin.y += adjustYBy;\n\n\t\tthis.calcPointsFromOrigin;\n\t}\n\n\tprivate calcVelocity(numTicks: number): VelocityModel {\n\t\tlet { magnitude, translateX, translateY, rotation } = this.velocity;\n\t\tmagnitude = magnitude || 0; // magnitude required for spaceship, since translateX & y are derived from it\n\n\t\tif (!this.thrustersOn) {\n\t\t\t// Case: Throttle is not on, slowly decrease speed\n\t\t\tif (magnitude > 1) {\n\t\t\t\tmagnitude = magnitude * numTicks * this.deceleration;\n\t\t\t} else {\n\t\t\t\tmagnitude = 0;\n\t\t\t}\n\t\t} else {\n\t\t\t// Case: Throttle ON --> increase speed\n\t\t\tif (magnitude < this.minThrust) {\n\t\t\t\tmagnitude = this.minThrust;\n\t\t\t} else {\n\t\t\t\tmagnitude += this.acceleration * numTicks;\n\t\t\t\tmagnitude = Math.min(magnitude, this.maxSpeed);\n\t\t\t}\n\t\t}\n\n\t\t// Get the Rotation && apply to offSet:\n\t\tif (this.turningLeft && !this.turningRight) {\n\t\t\t// Case: turning Left\n\t\t\trotation = -1 * numTicks * this.rotationSpeed;\n\t\t} else if (!this.turningLeft && this.turningRight) {\n\t\t\t// Case: turning Right\n\t\t\trotation = numTicks * this.rotationSpeed;\n\t\t} else {\n\t\t\trotation = 0;\n\t\t}\n\t\tthis.offSet += rotation;\n\n\t\t// Get the X & Y translation:\n\t\tif (magnitude && magnitude > 0) {\n\t\t\ttranslateX = magnitude * Math.sin((Math.PI * this.offSet) / 180);\n\t\t\ttranslateY = magnitude * Math.cos((Math.PI * this.offSet) / 180);\n\t\t} else {\n\t\t\ttranslateX = 0;\n\t\t\ttranslateY = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tmagnitude,\n\t\t\ttranslateX,\n\t\t\ttranslateY,\n\t\t\trotation,\n\t\t};\n\t}\n}\n\nexport function initSpaceshipFactory(): () => Promise<Spaceship> {\n\treturn (delay: number = 1000) => {\n\t\treturn new Promise(resolve => {\n\t\t\tsetTimeout(() => {\n\t\t\t\t// console.log('resolving promise');\n\t\t\t\tresolve(new Spaceship());\n\t\t\t}, delay);\n\t\t});\n\t};\n}\n","import DrawableClass from './DrawableClass';\nimport { deepClone, extend } from '../utils';\n\nexport class Bullet extends DrawableClass {\n\tstatic defaultSettings = {\n\t\tbulletSpeed: 11,\n\t\trSize: 0, // Not applicable for bullet (perhaps shouldnt be in abstract class?)\n\t};\n\n\tconstructor(bulletArgs: BulletArguments) {\n\t\tsuper(extend(Bullet.defaultSettings, bulletArgs));\n\t}\n\n\t// TODO: use velocity to get new origin point\n\tpublic calcPoints(ticks: number): PointModel[] {\n\t\tthis.origin.x += this.velocity.translateX;\n\t\tthis.origin.y -= this.velocity.translateY; // subtract, because canvas coordinates have inverted y-axis\n\n\t\t// Update the currentPoints\n\t\tthis.currPoints = [this.origin];\n\n\t\tif (this.isHidden()) {\n\t\t\tthis.isActive = false;\n\t\t}\n\n\t\treturn this.currPoints;\n\t}\n\n\tpublic drawPoints(): boolean {\n\t\tif (!this.isActive) {\n\t\t\treturn false;\n\t\t}\n\t\tconst ctx = DrawableClass.ctx;\n\n\t\tctx.save();\n\t\tctx.strokeStyle = this.strokeStyle;\n\t\tctx.beginPath();\n\t\tctx.arc(this.origin.x, this.origin.y, 2, 0, 2 * Math.PI);\n\t\tctx.stroke();\n\t\tctx.restore();\n\n\t\treturn true;\n\t}\n\n\tpublic getInitOrigin(options: any): PointModel {\n\t\tif (!options.origin) {\n\t\t\tthrow new Error(\n\t\t\t\t'Initial Origin must be supplied as argument for Bullet Class',\n\t\t\t);\n\t\t}\n\t\treturn options.origin;\n\t}\n\n\t/** NOTE: since getInitVelocity gets invoked from the abstract class's constructor,\n\t * hard to pass in arguments / options (escape hatch, where you pass in options)\n\t */\n\n\tpublic getInitVelocity(options: any): VelocityModel {\n\t\tif (!options.velocity) {\n\t\t\tthrow new Error(\n\t\t\t\t'Initial Velocity of Spaceship must be supplied as argument for Bullet Class',\n\t\t\t);\n\t\t}\n\n\t\tconst startingVelocity = deepClone(options.velocity); // defensive coding, repeated clone\n\t\tconst magnitude = (startingVelocity.magnitude =\n\t\t\tBullet.defaultSettings.bulletSpeed);\n\n\t\tconst translateX = magnitude * Math.sin((Math.PI * options.offSet) / 180);\n\t\tconst translateY = magnitude * Math.cos((Math.PI * options.offSet) / 180);\n\n\t\tstartingVelocity.translateX = translateX;\n\t\tstartingVelocity.translateY = translateY;\n\n\t\treturn startingVelocity;\n\t}\n}\n","const fakeJQuery = {\n\t// Source: https://toddmotto.com/javascript-hasclass-addclass-removeclass-toggleclass/#adding-a-class-with-addclass\n\thasClass(elem: HTMLElement, className: string) {\n\t\treturn new RegExp(` {$className} `).test(` ${elem.className} `);\n\t},\n\n\taddClass(elem: HTMLElement, className: string) {\n\t\tif (!this.hasClass(elem, className)) {\n\t\t\telem.className += ` ${className}`;\n\t\t}\n\t\t// TODO: cool, to make it chainable, return elem\n\t},\n\n\t// TODO: make a cool regular expression\n\t// Idea: ^(ab)$|^(ab) | (ab)$| (ab)\n\t// removeClass(elem: HTMLElement, className: string) {\n\t// \tif (this.hasClass(elem, className)) {\n\n\t// \t}\n\t// },\n\tremoveClass(elem: HTMLElement, className: string) {\n\t\tlet newClass = ` ${elem.className.replace(/[\\t\\r\\n]/g, ' ')} `;\n\t\tconst regExp = new RegExp(` ${className} `);\n\n\t\t// TODO: temp perhaps refactor the hasClass function?\n\t\t// if (this.hasClass(elem, className)) {\n\t\tif (regExp.test(newClass)) {\n\t\t\twhile (newClass.indexOf(` ${className} `) >= 0) {\n\t\t\t\tnewClass = newClass.replace(` ${className} `, ' ');\n\t\t\t}\n\t\t\telem.className = newClass.replace(/^\\s+|\\s+$/g, '');\n\t\t}\n\t},\n\n\t// source: https://gomakethings.com/how-to-get-the-closest-parent-element-with-a-matching-selector-using-vanilla-javascript/\n\tgetClosest(elem: any, selector: string) {\n\t\t// tslint:disable-next-line\n\t\tfor (; elem && elem !== document; elem = elem.parentNode) {\n\t\t\tif (elem.matches(selector)) return elem;\n\t\t}\n\t\treturn null;\n\t},\n};\n\nexport default fakeJQuery;\n","import { extend, deepClone } from '../utils';\nimport { initAsteroidFactory, Asteroid } from './Asteroid';\nimport { initSpaceshipFactory, Spaceship } from './Spaceship';\nimport { Bullet } from './Bullet';\n// import { fakeJquery as $ } from '../utils/fakeJquery';\nimport fakeJquery from '../utils/fakeJquery';\n\nconst defaultSettings = {\n\t// Game Rendering\n\ttickLength: 50, // ms time in between frames\n\tnumTicksBeforePausing: 5,\n\tfiringDelay: 300,\n\n\t// DOM related settings\n\tcanvasSelector: '#bg-canvas',\n\tscoreSelector: '#score-counter',\n\tlivesSelector: '#lives-counter',\n\tstartGameSelector: '.screen-overlay--starting',\n\tpauseGameSelector: '.screen-overlay--paused',\n\tgameOverSelector: '.screen-overlay--gameover',\n\n\t// Game Settings\n\tstartingLives: 2,\n\tmaxChildAsteroids: 2,\n\tmaxAsteroids: process.env.DEBUGGER ? 2 : 15,\n};\n\ninterface RequiredGameOptionsModel {\n\ttickLength: number; // ms times in between frames\n\tnumTicksBeforePausing: number;\n\tmaxAsteroids: number;\n\tmaxChildAsteroids: number; // max depth level of the child asteroids\n\tasteroidDelay: number; // delay in creating asteroid, from last creation\n\tfiringDelay: number; // minimum time between fired bullets\n\tstartingLives: number;\n\t// DOM related settings\n\tcanvasSelector: string;\n\tscoreSelector: string;\n\tlivesSelector: string;\n\tstartGameSelector: string;\n\tpauseGameSelector: string;\n\tgameOverSelector: string;\n}\n\nclass Game {\n\tsettings: RequiredGameOptionsModel;\n\t// DOM related properties:\n\tcanvasElem: HTMLCanvasElement;\n\tctx: any; // Is there a way to make this type more specific?\n\t// scoreElem: HTMLElement | null;\n\t// Question: annoying, do I have to always check if its null down the line?\n\tscoreElem: HTMLElement | null;\n\tlivesElem: HTMLElement | null;\n\tstartGameElem: HTMLElement | null;\n\tpauseGameElem: HTMLElement | null;\n\tgameOverElem: HTMLElement | null;\n\n\tlastRender: number;\n\tinitialized: boolean = false;\n\tgameOver: boolean = false;\n\tisActive: boolean;\n\n\t// Drawable Items:\n\tasteroids: Asteroid[] = [];\n\tpendingAsteroids: Map<number, Promise<Asteroid>> = new Map();\n\tbullets: Bullet[] = [];\n\tspaceship: Spaceship | Promise<Spaceship> | null = null;\n\n\tmakeAsteroid: (\n\t\tasteroidOptions?: AsteroidArguments,\n\t\tminDelay?: number,\n\t\tblnForce?: boolean,\n\t) => Promise<Asteroid>;\n\tmakeSpaceship: (delay: number) => Promise<Spaceship>;\n\tcanFire: boolean = true;\n\tisFiring: boolean = false;\n\tlives: number;\n\tscore: number;\n\n\tconstructor(optionalSettings?: GameArguments) {\n\t\t// NOTE: need to save Game to window prior to creating anything that inherits from the DrawableClass, since it needs a refers to the Game's canvasElem property\n\t\t// TODO: investigate this weird code smell\n\t\t(<any>window).Game = this;\n\n\t\tthis.settings = extend(defaultSettings, optionalSettings);\n\t\tthis.canvasElem = <HTMLCanvasElement>(\n\t\t\tdocument.querySelector(this.settings.canvasSelector)\n\t\t);\n\t\tthis.ctx;\n\t\t// Note: not getting \"All\", just the first element\n\t\tthis.scoreElem = document.querySelector(this.settings.scoreSelector);\n\t\tthis.livesElem = document.querySelector(this.settings.livesSelector);\n\t\tthis.startGameElem = document.querySelector(\n\t\t\tthis.settings.startGameSelector,\n\t\t);\n\t\tthis.pauseGameElem = document.querySelector(\n\t\t\tthis.settings.pauseGameSelector,\n\t\t);\n\t\tthis.gameOverElem = document.querySelector(this.settings.gameOverSelector);\n\n\t\t// TODO: add spaceship factory here\n\n\t\t// Dynamic properties:\n\t\tthis.lastRender = window.performance.now();\n\t\tthis.isActive = false;\n\n\t\t// Factory:\n\t\tthis.makeAsteroid = initAsteroidFactory();\n\t\tthis.makeSpaceship = initSpaceshipFactory();\n\n\t\t// Game Score:\n\t\tthis.lives = this.settings.startingLives;\n\t\tthis.score = 0;\n\n\t\tthis.preInit();\n\t}\n\n\tpreInit() {\n\t\tthis.isActive = true;\n\t\t// NOTE: Do I need to validate that I've selected DOM elements here?\n\t\t// Perhaps, check that we've selected things since its possible to select for elements that aren't on the dom\n\t\tconst domList = [\n\t\t\tthis.scoreElem,\n\t\t\tthis.livesElem,\n\t\t\tthis.startGameElem,\n\t\t\tthis.gameOverElem,\n\t\t];\n\n\t\tdomList.forEach(elem => {\n\t\t\tif (elem === null) {\n\t\t\t\tthrow new Error('Null element');\n\t\t\t}\n\t\t});\n\n\t\t// Set canvas size & context:\n\t\tthis.canvasElem.width = window.innerWidth;\n\t\tthis.canvasElem.height = window.innerHeight;\n\t\tthis.ctx = this.canvasElem.getContext('2d');\n\n\t\t// Update Score\n\t\tthis.updateScore();\n\n\t\tif (!process.env.DEBUGGER) {\n\t\t\t// Start looping of our game:\n\t\t\twindow.requestAnimationFrame(this.loop.bind(this));\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.initialized = true;\n\n\t\tif (this.startGameElem === null) {\n\t\t\tthrow new Error(\n\t\t\t\t`startGameElem is null, check to make sure it's been properly selected`,\n\t\t\t);\n\t\t}\n\n\t\t// Hide the home screen\n\t\tfakeJquery.addClass(this.startGameElem, 'hidden');\n\n\t\t// Reset all the asteroids\n\t\tthis.asteroids = [];\n\t}\n\n\tloop(timeStamp = this.lastRender) {\n\t\tif (!this.isActive) return;\n\n\t\t// RequestAnimationFrame as first line, good practice as per se MDN\n\t\twindow.requestAnimationFrame(this.loop.bind(this));\n\n\t\tthis.updateScore();\n\t\t// Determine numTicks & if enough time has passed to proceed:\n\t\tconst { tickLength, numTicksBeforePausing } = this.settings;\n\t\tconst nextTick = this.lastRender + tickLength;\n\t\tconst timeSinceTick = timeStamp - this.lastRender;\n\t\tconst numTicks = Math.floor(timeSinceTick / tickLength);\n\n\t\t// Check if render is too early\n\t\tif (timeStamp < nextTick) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Only render a new frame if its been a few ticks (to avoid jumping)\n\t\tif (numTicks < numTicksBeforePausing) {\n\t\t\tthis.createFrame(numTicks);\n\t\t}\n\t\tthis.lastRender = timeStamp;\n\t}\n\n\tcreateFrame(numTicks: number) {\n\t\t// TODO: Separate this out into preinit mode & init mode\n\n\t\t// Create Asteroid/Promise<Asteroid>:\n\t\tconst activeAsteroids = this.asteroids.length;\n\t\tconst pendingAsteroids = this.pendingAsteroids.size;\n\n\t\t// check if we should make a promised asteroid\n\t\tif (activeAsteroids + pendingAsteroids < this.settings.maxAsteroids) {\n\t\t\tconst asteroidPromise = this.makeAsteroid({}, 2000);\n\t\t\tthis._registerPromisedAsteroid(asteroidPromise);\n\t\t}\n\n\t\t// MAKING SPACESHIP:\n\t\tif (!this.spaceship && this.initialized) {\n\t\t\tthis.spaceship = this.makeSpaceship(200);\n\t\t\tthis.spaceship.then(spaceship => {\n\t\t\t\t// Replace the promised Spaceship, with the real spaceship\n\t\t\t\tthis.spaceship = spaceship;\n\t\t\t});\n\t\t}\n\n\t\t// TODO: fire bullet\n\t\tthis.fireBullet();\n\n\t\t// MAIN GAME LOGIC:\n\t\t// i) calculate points of all objects\n\t\tthis.calcAllPoints(numTicks);\n\t\t// TODO:\n\t\t// ii) look for collisions asteroids w./ spaceship && asteroid w./ bullets\n\t\tthis.processCollisions();\n\t\t// iii) render the updated points & objects:\n\t\tthis.drawAllPoints();\n\t}\n\n\tcalcAllPoints(numTicks: number) {\n\t\t// if (!(this.spaceship instanceof Spaceship)) {\n\t\tif (this.spaceship instanceof Spaceship) {\n\t\t\tthis.spaceship.calcPoints(numTicks);\n\t\t}\n\n\t\tthis.asteroids = this.asteroids.filter(asteroid => {\n\t\t\tif (asteroid instanceof Asteroid && asteroid.isActive) {\n\t\t\t\tasteroid.calcPoints(numTicks);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !(asteroid instanceof Asteroid);\n\t\t});\n\n\t\tthis.bullets = this.bullets.filter(bullet => {\n\t\t\tif (bullet.isActive) {\n\t\t\t\tbullet.calcPoints(numTicks);\n\t\t\t}\n\t\t\treturn bullet.isActive;\n\t\t});\n\t}\n\n\tprocessCollisions() {\n\t\t// Check for any asteroid & bullet collisions\n\t\tthis.asteroids.forEach(asteroid => {\n\t\t\t// TODO: Optimized VERSION --> clear cached bound values of asteroid, & get current bounds:\n\n\t\t\tif (!(asteroid instanceof Asteroid)) return;\n\n\t\t\t// Check bullet & asteroid collisions:\n\t\t\tthis.bullets.forEach(bullet => {\n\t\t\t\tconst asteroidHit = asteroid.containsPoint(bullet.currPoints[0]);\n\t\t\t\tif (asteroidHit) {\n\t\t\t\t\t// const clone = Asteroid.clone(asteroid);\n\t\t\t\t\t// this.asteroids.push(clone);\n\n\t\t\t\t\t// asteroid.isActive = false;\n\t\t\t\t\t// bullet.isActive = false;\n\n\t\t\t\t\t// IDEA: passs in asteroid & bullet in this eventEmitter?\n\t\t\t\t\tthis.emitEvent('asteroid-hit', { asteroid, bullet });\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Check spaceship & asteroid collisions:\n\t\t\tif (this.spaceship instanceof Spaceship && this.spaceship.isActive) {\n\t\t\t\tthis.spaceship.currPoints.forEach(pt => {\n\t\t\t\t\t// NOTE: this collision detection can be more finely tuned, by looking at the intersections of the line segments on the asteroid pts & spaceship pts. May encounter edge cases in current detection as Ship size increases\n\t\t\t\t\tconst shipHit = asteroid.containsPoint(pt);\n\t\t\t\t\tif (shipHit) {\n\t\t\t\t\t\tasteroid.isActive = false;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tthis.spaceship.isActive = false;\n\t\t\t\t\t\tthis.emitEvent('spaceship-hit');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tdrawAllPoints() {\n\t\t// Clear the box:\n\t\tthis.ctx.clearRect(0, 0, this.canvasElem.width, this.canvasElem.height);\n\n\t\t// Draw new points for all items:\n\t\tif (this.spaceship instanceof Spaceship && this.spaceship.isActive) {\n\t\t\tthis.spaceship.drawPoints();\n\t\t}\n\n\t\tthis.asteroids = this.asteroids.filter(asteroid => {\n\t\t\t// Note: filters true for active Asteroids or implied Promise\n\t\t\tif (asteroid instanceof Asteroid && asteroid.isActive) {\n\t\t\t\tasteroid.drawPoints();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !(asteroid instanceof Asteroid);\n\t\t});\n\t\t// // Any asteroid whose's points can't be drawn (not active) will be filtered out\n\t\t// this.asteroids = this.asteroids.filter(asteroid => asteroid.drawPoints());\n\n\t\tthis.bullets = this.bullets.filter(bullet => {\n\t\t\tif (bullet.isActive) {\n\t\t\t\tbullet.drawPoints(); // drawPoints also checks if its Active, dont know where it would be better\n\t\t\t}\n\t\t\treturn bullet.isActive;\n\t\t});\n\t}\n\n\t/**\n\t * Registers promised asteroids into pending Map w./ random number\n\t * Removes pending Asteroid from map once resolved\n\t *\n\t * @param asteroidPromise\n\t */\n\t// tslint:disable-next-line:function-name\n\t_registerPromisedAsteroid(asteroidPromise: Promise<Asteroid>) {\n\t\tlet keyNum = Math.floor(Math.random() * 10000);\n\t\twhile (this.pendingAsteroids.get(keyNum)) {\n\t\t\tkeyNum = Math.floor(Math.random() * 10000);\n\t\t}\n\n\t\t// Registers Asteroid:\n\t\tthis.pendingAsteroids.set(keyNum, asteroidPromise);\n\n\t\t// Adds Asteroid to array & removes from pending Map:\n\t\tasteroidPromise.then(asteroid => {\n\t\t\t// Add asteroid to official asteroid array:\n\t\t\tthis.asteroids.push(asteroid);\n\n\t\t\t// Remove pending promise from asteroid map:\n\t\t\tthis.pendingAsteroids.delete(keyNum);\n\t\t});\n\t}\n\n\tfireBullet() {\n\t\t// Check if there is a spaceship ship first\n\t\tif (!(this.spaceship instanceof Spaceship)) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.spaceship.isActive) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.spaceship.currPoints.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isFiring && this.canFire) {\n\t\t\tthis.canFire = false;\n\t\t\t/** NOTES: two thoughts here, the bullet needs to eventually know the origin to start at or the velocity\n\t\t\t *  it would be nice if it was at a high-level where I just pass the Spaceship as an argument --> so the getters are all\n\t\t\t *  internal to the bullet class.\n\t\t\t *\n\t\t\t * Alternative, is to create a method on Spaceship to get line of sight or something & pass that in. Require writing a method on Spaceship that returns current momentum line.\n\t\t\t */\n\n\t\t\tthis.bullets.push(\n\t\t\t\tnew Bullet({\n\t\t\t\t\torigin: deepClone(this.spaceship.currPoints[0]),\n\t\t\t\t\tvelocity: deepClone(this.spaceship.velocity),\n\t\t\t\t\toffSet: deepClone(this.spaceship.offSet),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.canFire = true;\n\t\t\t}, this.settings.firingDelay);\n\t\t}\n\t}\n\n\tupdateScore(options: { score?: number; lives?: number } = {}) {\n\t\tlet updateAll = false;\n\t\tif (Object.keys(options).length === 0) {\n\t\t\tupdateAll = true;\n\t\t}\n\n\t\tif (updateAll || options.lives) {\n\t\t\tif (this.livesElem === null) {\n\t\t\t\tthrow new Error(`Dom element for this.livesElem is null`);\n\t\t\t}\n\t\t\tif (this.lives < 0) {\n\t\t\t\tthis.livesElem.innerHTML = '--';\n\t\t\t} else {\n\t\t\t\tthis.livesElem.innerHTML = `${options.lives || this.lives}`;\n\t\t\t}\n\t\t}\n\t\tif (updateAll || options.score) {\n\t\t\tif (this.scoreElem === null) {\n\t\t\t\tthrow new Error(`Dom element for this.scoreElem is null`);\n\t\t\t}\n\t\t\tthis.scoreElem.innerHTML = `${options.score || this.score}`;\n\t\t}\n\t}\n\n\t// TODO: make an enum of all the event names? --> help with the type hinting\n\t// TODO: ability to be somewhat specific with overload?\n\temitEvent(eventName: string, overload?: any) {\n\t\tswitch (eventName) {\n\t\t\tcase 'debug:next-frame':\n\t\t\t\tif (process.env.DEBUGGER) {\n\t\t\t\t\tthis.createFrame(1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'right-on':\n\t\t\t\tif (this.spaceship instanceof Spaceship) {\n\t\t\t\t\tthis.spaceship.turningRight = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'right-off':\n\t\t\t\tif (this.spaceship instanceof Spaceship) {\n\t\t\t\t\tthis.spaceship.turningRight = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'left-on':\n\t\t\t\tif (this.spaceship instanceof Spaceship) {\n\t\t\t\t\tthis.spaceship.turningLeft = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'left-off':\n\t\t\t\tif (this.spaceship instanceof Spaceship) {\n\t\t\t\t\tthis.spaceship.turningLeft = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'fire-on':\n\t\t\t\tthis.isFiring = true;\n\t\t\t\tbreak;\n\t\t\tcase 'fire-off':\n\t\t\t\tthis.isFiring = false;\n\t\t\t\tbreak;\n\t\t\tcase 'throttle-on':\n\t\t\t\tif (this.spaceship instanceof Spaceship) {\n\t\t\t\t\tthis.spaceship.throttleOn();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'throttle-off':\n\t\t\t\tif (this.spaceship instanceof Spaceship) {\n\t\t\t\t\tthis.spaceship.throttleOff();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'asteroid-hit':\n\t\t\t\tconst { asteroid, bullet } = overload;\n\t\t\t\tasteroid.isActive = false;\n\t\t\t\tbullet.isActive = false;\n\n\t\t\t\tthis.score += asteroid.scoreValue;\n\t\t\t\tthis.updateScore({\n\t\t\t\t\tscore: this.score,\n\t\t\t\t});\n\n\t\t\t\t// Create a child Asteroid\n\t\t\t\t// TODO: create static asteroid method, takes in parent asteroid, #num of child asteroids\n\t\t\t\t// returns --> array of asteroids\n\t\t\t\tconst childrenAsteroids = Asteroid.makeChild(\n\t\t\t\t\tasteroid,\n\t\t\t\t\tthis.settings.maxChildAsteroids,\n\t\t\t\t);\n\n\t\t\t\tif (childrenAsteroids.length) {\n\t\t\t\t\tthis.asteroids = this.asteroids.concat(childrenAsteroids);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'spaceship-hit':\n\t\t\t\tthis.lives = this.lives -= 1;\n\t\t\t\tthis.updateScore({\n\t\t\t\t\tlives: this.lives,\n\t\t\t\t});\n\n\t\t\t\t// Generate new spaceship\n\t\t\t\tif (this.lives >= 0) {\n\t\t\t\t\tthis.spaceship = this.makeSpaceship(200);\n\t\t\t\t\tthis.spaceship.then(spaceship => {\n\t\t\t\t\t\t// Replace the promised Spaceship, with the real spaceship\n\t\t\t\t\t\tthis.spaceship = spaceship;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.emitEvent('game-over');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'toggle-pause':\n\t\t\t\tif (!this.pauseGameElem) {\n\t\t\t\t\tthrow new Error(`No pauseGameElem`);\n\t\t\t\t}\n\n\t\t\t\t// TODO: check if the pause is on or not:\n\t\t\t\tif (this.isActive) {\n\t\t\t\t\t// remove hidden class on paused\n\t\t\t\t\tfakeJquery.removeClass(this.pauseGameElem, 'hidden');\n\t\t\t\t} else {\n\t\t\t\t\t// put a hidden clase on paused\n\t\t\t\t\tfakeJquery.addClass(this.pauseGameElem, 'hidden');\n\t\t\t\t}\n\t\t\t\tthis.isActive = !this.isActive;\n\t\t\t\tif (this.isActive) {\n\t\t\t\t\tthis.loop();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'game-over':\n\t\t\t\t// TODO: Check highscores\n\t\t\t\t// this.isActive = false;\n\t\t\t\tthis.gameOver = true;\n\t\t\t\tif (this.gameOverElem === null) {\n\t\t\t\t\tthrow new Error(`No gameOverElem`);\n\t\t\t\t}\n\n\t\t\t\tfakeJquery.removeClass(this.gameOverElem, 'hidden');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Cannot emit event: ${eventName}`);\n\t\t}\n\t}\n}\n\nexport default Game;\n","import Game from '../game/Game';\n\ninterface BrowserEventModel {\n\tevent: string;\n\tcb: (e: any) => void;\n\tselector?: string;\n}\n\nconst documentEventListeners: BrowserEventModel[] = [\n\t// TODO: perhaps add checks to make sure there is a Game object, prior\n\t// to emitting any events?\n\n\t{\n\t\tevent: 'keydown',\n\t\tcb(e) {\n\t\t\tif (e.keyCode === 78) {\n\t\t\t\t(<any>window).Game.emitEvent('debug:next-frame');\n\t\t\t}\n\t\t\tif (e.keyCode === 38) {\n\t\t\t\t(<any>window).Game.emitEvent('throttle-on');\n\t\t\t} else if (e.keyCode === 39) {\n\t\t\t\t(<any>window).Game.emitEvent('right-on');\n\t\t\t} else if (e.keyCode === 37) {\n\t\t\t\t(<any>window).Game.emitEvent('left-on');\n\t\t\t} else if (e.keyCode === 32) {\n\t\t\t\tif (!(<any>window).Game.initialized) {\n\t\t\t\t\t(<any>window).Game.init();\n\t\t\t\t} else {\n\t\t\t\t\t(<any>window).Game.emitEvent('fire-on');\n\t\t\t\t}\n\t\t\t} else if (e.keyCode === 80) {\n\t\t\t\t(<any>window).Game.emitEvent('toggle-pause');\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\tevent: 'keyup',\n\t\tcb(e) {\n\t\t\tif (e.keyCode === 38) {\n\t\t\t\t(<any>window).Game.emitEvent('throttle-off');\n\t\t\t} else if (e.keyCode === 39) {\n\t\t\t\t(<any>window).Game.emitEvent('right-off');\n\t\t\t} else if (e.keyCode === 37) {\n\t\t\t\t(<any>window).Game.emitEvent('left-off');\n\t\t\t} else if (e.keyCode === 32) {\n\t\t\t\t(<any>window).Game.emitEvent('fire-off');\n\t\t\t}\n\t\t},\n\t},\n];\n\nexport default documentEventListeners;\n","import { initDebouncer } from '../utils';\n\n// REGISTER EVENT LISTENERS HERE:\nimport documentEventListeners from './documentEventListeners';\n\n/** TODO - reorganize\n * move documentEventListeners to the top, option to merge it\n * add ability to pass in a cb function (readyFN) to registerDocumentEventListeners\n */\n\n/** =========== Window related Event Listeners ===========\n *\n */\n// #region window related event listeners\nfunction documentReadyCode(readyFn: () => void) {\n\t// Run any code that requires the DOMContent to be loaded\n\tif (typeof readyFn === 'function') {\n\t\treadyFn();\n\t}\n\n\t// Register documentEventListeners here\n\tdocumentEventListeners.forEach(listener => {\n\t\tif (listener.selector) {\n\t\t\tdocument.querySelectorAll(listener.selector).forEach(ele => {\n\t\t\t\tele.addEventListener(listener.event, listener.cb);\n\t\t\t});\n\t\t} else {\n\t\t\t// default: add listener to the document\n\t\t\tdocument.addEventListener(listener.event, listener.cb);\n\t\t}\n\t});\n}\n\n// TODO: add flexibility of adding various cb fn as argument that will get invoked\nfunction registerDocumentEventListeners(readyFn: () => void) {\n\t// IE9+ fix: http://youmightnotneedjquery.com/#ready\n\t// NOTE document.attachEvent --> for Opera & Internet Explorer below 9\n\tif (\n\t\t(<any>document).attachEvent\n\t\t\t? document.readyState === 'complete'\n\t\t\t: document.readyState !== 'loading'\n\t) {\n\t\tdocumentReadyCode(readyFn);\n\t} else {\n\t\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\t\tdocumentReadyCode(readyFn);\n\t\t});\n\t}\n}\n\nfunction registerWindowEventListeners() {\n\t// === window related event listeners ===\n\t// Source: https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\tfunction resizeVh() {\n\t\tconsole.log('window resize fired!!!');\n\n\t\tconst vh = window.innerHeight * 0.01;\n\t\tif (document.documentElement) {\n\t\t\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\t\t}\n\t}\n\n\t// === Add window event listeners ===\n\twindow.addEventListener('resize', initDebouncer(resizeVh, 100));\n}\n// #endregion\n\nexport { registerWindowEventListeners, registerDocumentEventListeners };\n","// Parcel Bundler doesn't support asynchronous FS calls, so not statically getting evaluated\n// import dotenv from 'dotenv';\n// dotenv.config();\n\nif (process.env.DEBUGGER) {\n\tconsole.log('debugger is on');\n} else {\n\tconsole.log('debugger is off');\n}\n\nimport Game from './game/Game';\nimport {\n\tregisterWindowEventListeners,\n\tregisterDocumentEventListeners,\n} from './events';\n\nregisterWindowEventListeners();\nregisterDocumentEventListeners(() => {\n\tnew Game();\n\n\tif (process.env.DEBUGGER) {\n\t\t// debugger;\n\t\t(<any>window).Game.init();\n\t}\n});\n"]}